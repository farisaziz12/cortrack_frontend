{"ast":null,"code":"var _jsxFileName = \"/Users/farisaziz/Desktop/Projecs/Cortrack/cortrack_frontend/src/Components/CasesInfo.js\";\nimport React, { Component } from 'react';\nimport './CaseInfo.css';\nexport default class CasesInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      results: [],\n      value: '',\n      caseData: [],\n      selectedCountry: null,\n      newsForSelectedCountry: []\n    };\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.sortSearch = caseData => {\n      const results = caseData.map(country => [country, this.fuzzyMatch(country.country, this.state.value)]);\n      results.sort((a, b) => b[1] - a[1]);\n      const filteredResults = results.filter(result => result[1] > 0);\n      return filteredResults;\n    };\n\n    this.handleSearchChange = e => {\n      if (e.target.value.length === 0) {\n        this.setState({\n          value: \"\",\n          results: this.sortSearch(this.state.caseData)\n        });\n      } else {\n        this.setState({\n          value: e.target.value\n        });\n        const matches = this.sortSearch(this.state.caseData);\n        this.setState({\n          results: matches,\n          selectedCountry: null,\n          newsForSelectedCountry: []\n        });\n      }\n    };\n\n    this.handlePickCountry = e => {\n      this.setState({\n        selectedCountry: e.target.textContent,\n        results: [],\n        value: ''\n      });\n      fetch(`https://gnews.io/api/v3/search?q=${e.target.textContent}%20coronavirus%20news&token=6385a60f5d387a9bf5fd4f8d033f4168`).then(response => response.json()).then(news => this.setState({\n        newsForSelectedCountry: news.articles\n      })).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.fuzzyMatch = (compareTerm, term) => {\n      if (term.length === 0) return 1;\n      let string = compareTerm.toLowerCase();\n      let compare = term.toLowerCase();\n      let matches = 0;\n\n      for (let i = 0; i < compare.length; i++) {\n        string.indexOf(compare[i]) > -1 ? matches += 1 : matches -= 1;\n      }\n\n      return matches / compareTerm.length;\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://covid19-data.p.rapidapi.com/all\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"covid19-data.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"36d86838d4mshba08a92dbba7104p1ae352jsnf92cd7cb9983\"\n      }\n    }).then(response => response.json()).then(data => this.setState({\n      caseData: data\n    })).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    const sortedNews = this.state.newsForSelectedCountry && this.state.newsForSelectedCountry[0] ? this.state.newsForSelectedCountry.sort((a, b) => {\n      return new Date(b.publishedAt) - new Date(a.publishedAt);\n    }) : undefined;\n    const filteredNews = sortedNews && sortedNews.filter(article => article.title.includes(this.state.selectedCountry));\n    const top3News = filteredNews ? filteredNews.slice(0, 3) : undefined;\n    const {\n      results\n    } = this.state;\n    const country = this.state.caseData.find(country => country.country === this.state.selectedCountry);\n    return React.createElement(\"div\", {\n      className: \"search-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Case Info\"), React.createElement(\"h3\", {\n      className: \"txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Search for a country to get info on cases\"), React.createElement(\"input\", {\n      className: \"search\",\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), results.map(result => React.createElement(\"button\", {\n      onClick: this.handlePickCountry,\n      className: \"btn\",\n      name: result[0].country,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, result[0].country)), React.createElement(\"div\", {\n      className: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.selectedCountry && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"case-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Country: \", country.country_name), React.createElement(\"h2\", {\n      className: \"new-case-txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Cases: \", country.confirmed), React.createElement(\"h2\", {\n      className: \"new-death-txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Deaths: \", country.deaths), React.createElement(\"h2\", {\n      className: \"recover-txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Total Recovered: \", country.recovered), React.createElement(\"h3\", {\n      className: \"txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Percent of infected who have died: \", (parseFloat(country.deaths) / parseFloat(country.cases.replace(/,/g, '')) * 100).toFixed(2) + \"%\")), React.createElement(\"div\", {\n      className: \"case-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Latest News:\"), !top3News ? React.createElement(\"h2\", {\n      className: \"txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"None\") : undefined, top3News && top3News.map(article => React.createElement(\"h3\", {\n      className: \"news-txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"news-txt\",\n      href: article.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, article.title)))), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/farisaziz/Desktop/Projecs/Cortrack/cortrack_frontend/src/Components/CasesInfo.js"],"names":["React","Component","CasesInfo","state","results","value","caseData","selectedCountry","newsForSelectedCountry","handleResultSelect","e","result","setState","title","sortSearch","map","country","fuzzyMatch","sort","a","b","filteredResults","filter","handleSearchChange","target","length","matches","handlePickCountry","textContent","fetch","then","response","json","news","articles","catch","err","console","log","compareTerm","term","string","toLowerCase","compare","i","indexOf","componentDidMount","data","render","sortedNews","Date","publishedAt","undefined","filteredNews","article","includes","top3News","slice","find","country_name","confirmed","deaths","recovered","parseFloat","cases","replace","toFixed","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;AAEA,eAAe,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE7CE,KAF6C,GAErC;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,QAAQ,EAAE,EAHN;AAIJC,MAAAA,eAAe,EAAE,IAJb;AAKJC,MAAAA,sBAAsB,EAAE;AALpB,KAFqC;;AAAA,SA0B7CC,kBA1B6C,GA0BxB,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,KAAmB,KAAKC,QAAL,CAAc;AAAEP,MAAAA,KAAK,EAAEM,MAAM,CAACE;AAAhB,KAAd,CA1BK;;AAAA,SA4B7CC,UA5B6C,GA4B/BR,QAAD,IAAc;AACvB,YAAMF,OAAO,GAAGE,QAAQ,CAACS,GAAT,CAAaC,OAAO,IAAI,CAACA,OAAD,EAAU,KAAKC,UAAL,CAAgBD,OAAO,CAACA,OAAxB,EAAiC,KAAKb,KAAL,CAAWE,KAA5C,CAAV,CAAxB,CAAhB;AACAD,MAAAA,OAAO,CAACc,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAA/B;AACA,YAAME,eAAe,GAAGjB,OAAO,CAACkB,MAAR,CAAeX,MAAM,IAAIA,MAAM,CAAC,CAAD,CAAN,GAAY,CAArC,CAAxB;AACA,aAAOU,eAAP;AACH,KAjC4C;;AAAA,SAmC7CE,kBAnC6C,GAmCvBb,CAAD,IAAO;AACxB,UAAIA,CAAC,CAACc,MAAF,CAASnB,KAAT,CAAeoB,MAAf,KAA0B,CAA9B,EAAgC;AAC5B,aAAKb,QAAL,CAAc;AACVP,UAAAA,KAAK,EAAE,EADG;AAEVD,UAAAA,OAAO,EAAE,KAAKU,UAAL,CAAgB,KAAKX,KAAL,CAAWG,QAA3B;AAFC,SAAd;AAIH,OALD,MAKO;AACH,aAAKM,QAAL,CAAc;AAAEP,UAAAA,KAAK,EAAEK,CAAC,CAACc,MAAF,CAASnB;AAAlB,SAAd;AACA,cAAMqB,OAAO,GAAG,KAAKZ,UAAL,CAAgB,KAAKX,KAAL,CAAWG,QAA3B,CAAhB;AACA,aAAKM,QAAL,CAAc;AACVR,UAAAA,OAAO,EAAEsB,OADC;AAEVnB,UAAAA,eAAe,EAAE,IAFP;AAGVC,UAAAA,sBAAsB,EAAE;AAHd,SAAd;AAKH;AACJ,KAlD4C;;AAAA,SAoD7CmB,iBApD6C,GAoDxBjB,CAAD,IAAO;AACvB,WAAKE,QAAL,CAAc;AACVL,QAAAA,eAAe,EAAEG,CAAC,CAACc,MAAF,CAASI,WADhB;AAEVxB,QAAAA,OAAO,EAAE,EAFC;AAGVC,QAAAA,KAAK,EAAE;AAHG,OAAd;AAKIwB,MAAAA,KAAK,CAAE,oCAAmCnB,CAAC,CAACc,MAAF,CAASI,WAAY,8DAA1D,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EACmCF,IADnC,CACwCG,IAAI,IACxC,KAAKrB,QAAL,CAAc;AAACJ,QAAAA,sBAAsB,EAAEyB,IAAI,CAACC;AAA9B,OAAd,CAFJ,EAICC,KAJD,CAIOC,GAAG,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAND;AAOP,KAjE4C;;AAAA,SAmE7CnB,UAnE6C,GAmEhC,CAACsB,WAAD,EAAcC,IAAd,KAAuB;AAChC,UAAIA,IAAI,CAACf,MAAL,KAAgB,CAApB,EACI,OAAO,CAAP;AACJ,UAAIgB,MAAM,GAAGF,WAAW,CAACG,WAAZ,EAAb;AACA,UAAIC,OAAO,GAAGH,IAAI,CAACE,WAAL,EAAd;AACA,UAAIhB,OAAO,GAAG,CAAd;;AACA,WAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAAClB,MAA5B,EAAoCmB,CAAC,EAArC,EAAyC;AACrCH,QAAAA,MAAM,CAACI,OAAP,CAAeF,OAAO,CAACC,CAAD,CAAtB,IAA6B,CAAC,CAA9B,GAAkClB,OAAO,IAAI,CAA7C,GAAiDA,OAAO,IAAG,CAA3D;AACH;;AACD,aAAOA,OAAO,GAAGa,WAAW,CAACd,MAA7B;AACH,KA7E4C;AAAA;;AAU7CqB,EAAAA,iBAAiB,GAAE;AACfjB,IAAAA,KAAK,CAAC,yCAAD,EAA4C;AAC7C,gBAAU,KADmC;AAE7C,iBAAW;AACP,2BAAmB,6BADZ;AAEP,0BAAkB;AAFX;AAFkC,KAA5C,CAAL,CAOCC,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,EAOmCF,IAPnC,CAOwCiB,IAAI,IACxC,KAAKnC,QAAL,CAAc;AAACN,MAAAA,QAAQ,EAAEyC;AAAX,KAAd,CARJ,EAUCZ,KAVD,CAUOC,GAAG,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACC,KAZD;AAaC;;AAuDLY,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAChB,KAAK9C,KAAL,CAAWK,sBAAX,IAAoC,KAAKL,KAAL,CAAWK,sBAAX,CAAkC,CAAlC,CAApC,GAA0E,KAAKL,KAAL,CAAWK,sBAAX,CAAkCU,IAAlC,CAAuC,CAACC,CAAD,EAAGC,CAAH,KAAS;AACtH,aAAO,IAAI8B,IAAJ,CAAS9B,CAAC,CAAC+B,WAAX,IAA0B,IAAID,IAAJ,CAAS/B,CAAC,CAACgC,WAAX,CAAjC;AACD,KAFuE,CAA1E,GAIAC,SALA;AAOA,UAAMC,YAAY,GAAGJ,UAAU,IAAGA,UAAU,CAAC3B,MAAX,CAAkBgC,OAAO,IAAIA,OAAO,CAACzC,KAAR,CAAc0C,QAAd,CAAuB,KAAKpD,KAAL,CAAWI,eAAlC,CAA7B,CAAlC;AACA,UAAMiD,QAAQ,GAAGH,YAAY,GAAEA,YAAY,CAACI,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAF,GAA6BL,SAA1D;AACA,UAAM;AAAEhD,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,UAAMa,OAAO,GAAG,KAAKb,KAAL,CAAWG,QAAX,CAAoBoD,IAApB,CAAyB1C,OAAO,IAAIA,OAAO,CAACA,OAAR,KAAoB,KAAKb,KAAL,CAAWI,eAAnE,CAAhB;AACA,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAFJ,EAGI;AAAO,MAAA,SAAS,EAAC,QAAjB;AAA0B,MAAA,IAAI,EAAC,MAA/B;AAAsC,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,KAAxD;AAA+D,MAAA,QAAQ,EAAE,KAAKkB,kBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAGuG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHvG,EAIKnB,OAAO,CAACW,GAAR,CAAYJ,MAAM,IACf;AAAQ,MAAA,OAAO,EAAE,KAAKgB,iBAAtB;AAAyC,MAAA,SAAS,EAAC,KAAnD;AAAyD,MAAA,IAAI,EAAEhB,MAAM,CAAC,CAAD,CAAN,CAAUK,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmFL,MAAM,CAAC,CAAD,CAAN,CAAUK,OAA7F,CADH,CAJL,EAQI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKb,KAAL,CAAWI,eAAX,IACD,0CACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8BS,OAAO,CAAC2C,YAAtC,CADJ,EAEI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqC3C,OAAO,CAAC4C,SAA7C,CAFJ,EAGI;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAuC5C,OAAO,CAAC6C,MAA/C,CAHJ,EAMI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA8C7C,OAAO,CAAC8C,SAAtD,CANJ,EAOI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAwD,CAACC,UAAU,CAAC/C,OAAO,CAAC6C,MAAT,CAAV,GAA2BE,UAAU,CAAC/C,OAAO,CAACgD,KAAR,CAAcC,OAAd,CAAsB,IAAtB,EAA4B,EAA5B,CAAD,CAArC,GAAyE,GAA1E,EAA+EC,OAA/E,CAAuF,CAAvF,IAA4F,GAApJ,CAPJ,CADA,EAWA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEK,CAACV,QAAD,GAAW;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAX,GAA2CJ,SAFhD,EAGKI,QAAQ,IACTA,QAAQ,CAACzC,GAAT,CAAauC,OAAO,IAChB;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB;AAAG,MAAA,SAAS,EAAC,UAAb;AAAwB,MAAA,IAAI,EAAEA,OAAO,CAACa,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4Cb,OAAO,CAACzC,KAApD,CAAzB,CADJ,CAJJ,CAXA,OAmBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBP,CAFJ,CARJ,CADJ;AAqCH;;AAhI4C","sourcesContent":["import React, { Component } from 'react'\nimport './CaseInfo.css'\n\nexport default class CasesInfo extends Component {\n\n    state = {\n        results: [],\n        value: '', \n        caseData: [],\n        selectedCountry: null,\n        newsForSelectedCountry: []\n    }\n\n    componentDidMount(){\n        fetch(\"https://covid19-data.p.rapidapi.com/all\", {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"covid19-data.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"36d86838d4mshba08a92dbba7104p1ae352jsnf92cd7cb9983\"\n            }\n        })\n        .then(response => response.json()).then(data => \n            this.setState({caseData: data\n            }))\n        .catch(err => {\n        console.log(err);\n        });\n        }\n\n    handleResultSelect = (e, { result }) => this.setState({ value: result.title })\n\n    sortSearch = (caseData) => {\n        const results = caseData.map(country => [country, this.fuzzyMatch(country.country, this.state.value)]);\n        results.sort((a, b) => b[1] - a[1]);\n        const filteredResults = results.filter(result => result[1] > 0)\n        return filteredResults\n    }\n\n    handleSearchChange = (e) => {\n        if (e.target.value.length === 0){\n            this.setState({\n                value: \"\",\n                results: this.sortSearch(this.state.caseData)\n            })\n        } else {\n            this.setState({ value: e.target.value })\n            const matches = this.sortSearch(this.state.caseData)\n            this.setState({\n                results: matches,\n                selectedCountry: null,\n                newsForSelectedCountry: []\n            })\n        }\n    }\n\n    handlePickCountry = (e) => {\n        this.setState({\n            selectedCountry: e.target.textContent,\n            results: [],\n            value: ''\n    })\n            fetch(`https://gnews.io/api/v3/search?q=${e.target.textContent}%20coronavirus%20news&token=6385a60f5d387a9bf5fd4f8d033f4168`)\n            .then(response => response.json()).then(news => \n                this.setState({newsForSelectedCountry: news.articles\n            }))\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    fuzzyMatch = (compareTerm ,term) => {\n        if (term.length === 0)\n            return 1;\n        let string = compareTerm.toLowerCase();\n        let compare = term.toLowerCase();\n        let matches = 0;\n        for (let i = 0; i < compare.length; i++) {\n            string.indexOf(compare[i]) > -1 ? matches += 1 : matches -=1;\n        }\n        return matches / compareTerm.length;\n    }\n\n    render() {\n        const sortedNews = \n        this.state.newsForSelectedCountry&& this.state.newsForSelectedCountry[0]? this.state.newsForSelectedCountry.sort((a,b) => {\n            return new Date(b.publishedAt) - new Date(a.publishedAt);\n          }) \n          : \n        undefined\n        \n        const filteredNews = sortedNews&& sortedNews.filter(article => article.title.includes(this.state.selectedCountry)) \n        const top3News = filteredNews? filteredNews.slice(0, 3) : undefined\n        const { results } = this.state\n        const country = this.state.caseData.find(country => country.country === this.state.selectedCountry)\n        return (\n            <div className='search-div'>\n                <h1 className='txt'>Case Info</h1>\n                <h3 className='txt'>Search for a country to get info on cases</h3>\n                <input className='search' type='text' value={this.state.value} onChange={this.handleSearchChange}/><br/>\n                {results.map(result => (\n                    <button onClick={this.handlePickCountry} className='btn' name={result[0].country}>{result[0].country}</button>\n                ))}\n\n                <div className='result'> \n                    {this.state.selectedCountry&&\n                    <>\n                    <div className='case-box'>\n                        <h1 className='txt'>Country: {country.country_name}</h1>\n                        <h2 className='new-case-txt'>Cases: {country.confirmed}</h2>\n                        <h2 className='new-death-txt'>Deaths: {country.deaths}</h2>\n                        {/* <h2 className='new-case-txt'>New Cases: {country.new_cases}</h2>\n                        <h2 className='new-death-txt'>New Deaths: {country.new_deaths}</h2> */}\n                        <h2 className='recover-txt'>Total Recovered: {country.recovered}</h2>\n                        <h3 className='txt'>Percent of infected who have died: {(parseFloat(country.deaths)/parseFloat(country.cases.replace(/,/g, '')) * 100).toFixed(2) + \"%\"}</h3>\n                        {/* <h3 className='txt'>Percent of infected who have recovered: {(parseFloat(country.total_recovered.replace(/,/g, ''))/parseFloat(country.cases.replace(/,/g, '')) * 100).toFixed(2) + \"%\"}</h3> */}\n                    </div>\n                    <div className='case-box'>\n                        <h1 className='txt'>Latest News:</h1>\n                        {!top3News? <h2 className='txt'>None</h2> : undefined}\n                        {top3News&& \n                        top3News.map(article => (\n                            <h3 className='news-txt'><a className='news-txt' href={article.url}>{article.title}</a></h3>\n                        ))\n                        }\n                    </div> <br/>\n                    </>\n                    }\n                </div>\n            </div>\n\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}