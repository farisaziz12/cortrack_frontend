{"ast":null,"code":"var _jsxFileName = \"/Users/farisaziz/Desktop/Projecs/Cortrack/cortrack_frontend/src/Components/Homepage.js\";\nimport React, { Component } from \"react\";\nimport \"./Homepage.css\";\nimport { Link } from \"react-router-dom\"; // import * as data from \"../data/countries.geojson\";\n\nexport default class Homepage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      latestNews: [],\n      newsForCurrentCountry: [],\n      currentCountry: null,\n      caseData: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(`https://gnews.io/api/v3/search?q=coronavirus%20news&token=6385a60f5d387a9bf5fd4f8d033f4168`).then(response => response.json()).then(news => this.setState({\n      latestNews: news.articles && news.articles\n    })).catch(err => {\n      console.log(err);\n    });\n    fetch(\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"36d86838d4mshba08a92dbba7104p1ae352jsnf92cd7cb9983\"\n      }\n    }).then(response => response.json()).then(data => this.setState({\n      caseData: data.countries_stat\n    })).catch(err => {\n      console.log(err);\n    });\n    fetch(\"http://ip-api.com/json\").then(resp => resp.json()).then(resp => fetch(`https://gnews.io/api/v3/search?q=${resp.country}%20coronavirus%20news&token=6385a60f5d387a9bf5fd4f8d033f4168`).then(response => response.json()).then(news => this.setState({\n      newsForCurrentCountry: news.articles,\n      currentCountry: resp.country\n    })).catch(err => {\n      console.log(err);\n    }));\n  }\n\n  render() {\n    const sortedNews = this.state.latestNews && this.state.latestNews[0] ? this.state.latestNews.sort((a, b) => {\n      return new Date(b.publishedAt) - new Date(a.publishedAt);\n    }) : undefined;\n    const top5News = sortedNews ? sortedNews.slice(0, 5) : undefined;\n    const {\n      currentCountry,\n      caseData\n    } = this.state;\n    const currentCountryCaseData = caseData[0] && currentCountry ? caseData.filter(Ccase => Ccase.country_name === currentCountry) : undefined;\n    const CountrysortedNews = this.state.newsForSelectedCountry && this.state.newsForSelectedCountry[0] ? this.state.newsForSelectedCountry.sort((a, b) => {\n      return new Date(b.publishedAt) - new Date(a.publishedAt);\n    }) : undefined;\n    const filteredNews = sortedNews && sortedNews.filter(article => article.title.includes(this.state.selectedCountry));\n    const top3News = filteredNews ? filteredNews.slice(0, 3) : undefined;\n    return React.createElement(\"div\", {\n      className: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"CorTrack\"), React.createElement(Link, {\n      to: \"/map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"nav-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Map\")), React.createElement(Link, {\n      to: \"/case-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"nav-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Cases Info\")), React.createElement(\"div\", {\n      className: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, currentCountry && currentCountryCaseData && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"case-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Country: \", currentCountryCaseData.country_name), React.createElement(\"h2\", {\n      className: \"txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Cases: \", currentCountryCaseData.cases), React.createElement(\"h2\", {\n      className: \"txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Deaths: \", currentCountryCaseData.deaths), React.createElement(\"h2\", {\n      className: \"new-case-txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"New Cases: \", currentCountryCaseData.new_cases), React.createElement(\"h2\", {\n      className: \"new-death-txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"New Deaths: \", currentCountryCaseData.new_deaths), React.createElement(\"h2\", {\n      className: \"recover-txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Total Recovered: \", currentCountryCaseData.total_recovered), React.createElement(\"h3\", {\n      className: \"txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Percent of infected who have died: \", (parseFloat(currentCountryCaseData.deaths.replace(/,/g, '')) / parseFloat(currentCountryCaseData.cases.replace(/,/g, '')) * 100).toFixed(2) + \"%\"), React.createElement(\"h3\", {\n      className: \"txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Percent of infected who have recovered: \", (parseFloat(currentCountryCaseData.total_recovered.replace(/,/g, '')) / parseFloat(currentCountryCaseData.cases.replace(/,/g, '')) * 100).toFixed(2) + \"%\")), React.createElement(\"div\", {\n      className: \"case-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, currentCountryCaseData.country_name, \"'s Latest News:\"), !top3News ? React.createElement(\"h2\", {\n      className: \"txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"None\") : undefined, top3News && top3News.map(article => React.createElement(\"h3\", {\n      className: \"news-txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"news-txt\",\n      href: article.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, article.title)))), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), this.state.latestNews && this.state.latestNews[0] && React.createElement(\"h1\", {\n      className: \"h1 news-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Latest Global News\")), React.createElement(\"div\", {\n      className: \"latest-news\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, top5News && top5News.map(newsPiece => React.createElement(\"h3\", {\n      className: \"news-txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"news-txt\",\n      href: newsPiece.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, newsPiece.title)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/farisaziz/Desktop/Projecs/Cortrack/cortrack_frontend/src/Components/Homepage.js"],"names":["React","Component","Link","Homepage","state","latestNews","newsForCurrentCountry","currentCountry","caseData","componentDidMount","fetch","then","response","json","news","setState","articles","catch","err","console","log","data","countries_stat","resp","country","render","sortedNews","sort","a","b","Date","publishedAt","undefined","top5News","slice","currentCountryCaseData","filter","Ccase","country_name","CountrysortedNews","newsForSelectedCountry","filteredNews","article","title","includes","selectedCountry","top3News","cases","deaths","new_cases","new_deaths","total_recovered","parseFloat","replace","toFixed","map","url","newsPiece"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Homepage.css\";\nimport { Link } from \"react-router-dom\";\n// import * as data from \"../data/countries.geojson\";\n\n\nexport default class Homepage extends Component {\n\n    state = {\n        latestNews: [], \n        newsForCurrentCountry: [],\n        currentCountry: null,\n        caseData: []\n    }\n\n\n    componentDidMount(){\n        fetch(`https://gnews.io/api/v3/search?q=coronavirus%20news&token=6385a60f5d387a9bf5fd4f8d033f4168`)\n            .then(response => response.json()).then(news => \n                this.setState({latestNews: news.articles&& news.articles\n            }))\n            .catch(err => {\n                console.log(err);\n            });\n\n        fetch(\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php\", {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"36d86838d4mshba08a92dbba7104p1ae352jsnf92cd7cb9983\"\n            }\n        })\n        .then(response => response.json()).then(data => \n            this.setState({caseData: data.countries_stat\n            }))\n        .catch(err => {\n        console.log(err);\n        })\n\n\n        fetch(\"http://ip-api.com/json\").then(resp => resp.json()).then(resp => \n        fetch(`https://gnews.io/api/v3/search?q=${resp.country}%20coronavirus%20news&token=6385a60f5d387a9bf5fd4f8d033f4168`)\n            .then(response => response.json()).then(news => \n                this.setState({newsForCurrentCountry: news.articles, currentCountry: resp.country\n            }))\n            .catch(err => {\n                console.log(err);\n            })\n        )\n    }\n\n  render() {\n    const sortedNews  = this.state.latestNews&& this.state.latestNews[0]? this.state.latestNews.sort((a,b) => {\n        return new Date(b.publishedAt) - new Date(a.publishedAt);\n    }):\n    undefined\n\n    const top5News = sortedNews? sortedNews.slice(0, 5) : undefined\n    const { currentCountry, caseData } = this.state\n    const currentCountryCaseData = caseData[0]&& currentCountry? caseData.filter(Ccase => Ccase.country_name === currentCountry) : undefined\n\n    const CountrysortedNews = \n        this.state.newsForSelectedCountry&& this.state.newsForSelectedCountry[0]? this.state.newsForSelectedCountry.sort((a,b) => {\n            return new Date(b.publishedAt) - new Date(a.publishedAt);\n          }) \n          : \n        undefined\n        \n        const filteredNews = sortedNews&& sortedNews.filter(article => article.title.includes(this.state.selectedCountry)) \n        const top3News = filteredNews? filteredNews.slice(0, 3) : undefined\n\n    return (\n      <div className=\"div\">\n        <h1 className=\"h1\">CorTrack</h1>\n        <Link to=\"/map\">\n          <button className=\"nav-btn\">Map</button>\n        </Link>\n        <Link to=\"/case-info\">\n          <button className=\"nav-btn\">Cases Info</button>\n        </Link>\n\n        <div className='result'> \n            {currentCountry && currentCountryCaseData&&\n            <>\n            <div className='case-box'>\n                <h1 className='txt'>Country: {currentCountryCaseData.country_name}</h1>\n                <h2 className='txt'>Cases: {currentCountryCaseData.cases}</h2>\n                <h2 className='txt'>Deaths: {currentCountryCaseData.deaths}</h2>\n                <h2 className='new-case-txt'>New Cases: {currentCountryCaseData.new_cases}</h2>\n                <h2 className='new-death-txt'>New Deaths: {currentCountryCaseData.new_deaths}</h2>\n                <h2 className='recover-txt'>Total Recovered: {currentCountryCaseData.total_recovered}</h2>\n                <h3 className='txt'>Percent of infected who have died: {(parseFloat(currentCountryCaseData.deaths.replace(/,/g, ''))/parseFloat(currentCountryCaseData.cases.replace(/,/g, '')) * 100).toFixed(2) + \"%\"}</h3>\n                <h3 className='txt'>Percent of infected who have recovered: {(parseFloat(currentCountryCaseData.total_recovered.replace(/,/g, ''))/parseFloat(currentCountryCaseData.cases.replace(/,/g, '')) * 100).toFixed(2) + \"%\"}</h3>\n            </div>\n            <div className='case-box'>\n              <h1 className='txt'>{currentCountryCaseData.country_name}'s Latest News:</h1>\n                {!top3News? <h2 className='txt'>None</h2> : undefined}\n                {top3News&& \n                top3News.map(article => (\n                    <h3 className='news-txt'><a className='news-txt' href={article.url}>{article.title}</a></h3>\n                ))\n                }\n            </div> <br/>\n            </>\n            }\n        </div>\n\n        {this.state.latestNews&& this.state.latestNews[0]&&\n        <h1 className=\"h1 news-title\"><u>Latest Global News</u></h1>\n        }\n        <div className='latest-news'>\n            {top5News&&\n            top5News.map(newsPiece => (\n                <h3 className='news-txt'><a className='news-txt' href={newsPiece.url}>{newsPiece.title}</a></h3>\n            ))}\n        </div>\n        \n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}