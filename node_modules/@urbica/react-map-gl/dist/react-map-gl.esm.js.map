{"version":3,"file":"react-map-gl.esm.js","sources":["../src/components/MapContext/index.js","../src/utils/mapbox-gl.js","../src/components/MapGL/events.js","../src/utils/capitalizeFirstLetter.js","../src/utils/diff.js","../src/utils/queryRenderedFeatures.js","../src/components/Layer/index.js","../src/components/CustomLayer/index.js","../src/utils/normalizeChildren.js","../src/components/MapGL/index.js","../src/utils/isArraysEqual.js","../src/utils/validateSource.js","../src/components/Source/index.js","../src/components/Popup/index.js","../src/components/Marker/index.js","../src/components/FeatureState/index.js","../src/components/Image/index.js","../src/components/AttributionControl/index.js","../src/components/FullscreenControl/index.js","../src/components/GeolocateControl/index.js","../src/components/NavigationControl/index.js","../src/components/ScaleControl/index.js","../node_modules/@mapbox/mapbox-gl-language/index.js","../src/components/LanguageControl/index.js","../node_modules/@mapbox/mapbox-gl-traffic/mapbox-gl-traffic.js","../src/components/TrafficControl/index.js","../src/components/Filter/index.js"],"sourcesContent":["// @flow\n\nimport { createContext } from 'react';\nimport type { Context } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\n\nconst MapContext: Context<?MapboxMap> = createContext(null);\n\nexport default MapContext;\n","// @flow\nimport type MapboxGL from 'mapbox-gl/src/index';\n\nconst isBrowser: boolean = !(\n  Object.prototype.toString.call(global.process) === '[object process]' &&\n  !global.process.browser\n);\n\n// $FlowFixMe\nconst mapboxgl: MapboxGL = isBrowser ? require('mapbox-gl') : null;\n\nexport default mapboxgl;\n","// @flow\n\nconst events = [\n  'resize',\n  'remove',\n  'mousedown',\n  'mouseup',\n  'mouseover',\n  'mousemove',\n  'click',\n  'dblclick',\n  'mouseenter',\n  'mouseleave',\n  'mouseout',\n  'contextmenu',\n  'touchstart',\n  'touchend',\n  'touchmove',\n  'touchcancel',\n  'movestart',\n  'move',\n  'moveend',\n  'dragstart',\n  'drag',\n  'dragend',\n  'zoomstart',\n  'zoom',\n  'zoomend',\n  'rotatestart',\n  'rotate',\n  'rotateend',\n  'pitchstart',\n  'pitch',\n  'pitchend',\n  'boxzoomstart',\n  'boxzoomend',\n  'boxzoomcancel',\n  'webglcontextlost',\n  'webglcontextrestored',\n  'load',\n  'error',\n  'data',\n  'styledata',\n  'sourcedata',\n  'dataloading',\n  'styledataloading',\n  'sourcedataloading'\n];\n\nmodule.exports = events;\n","// @flow\n\nfunction capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nmodule.exports = capitalizeFirstLetter;\n","// @flow\n\ntype KV = {\n  [string]: any\n};\n\nconst diff = (newProps: KV = {}, prevProps: KV = {}) => {\n  const keys = new Set([...Object.keys(newProps), ...Object.keys(prevProps)]);\n  return [...keys].reduce((acc, key: string) => {\n    const value = newProps[key];\n    if (value !== prevProps[key]) {\n      acc.push([key, value]);\n    }\n    return acc;\n  }, []);\n};\n\nexport default diff;\n","// @flow\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\n\nconst queryRenderedFeatures = (\n  map: MapboxMap,\n  layerId: string,\n  position: [number, number],\n  radius: number\n) => {\n  const parameters = { layers: [layerId] };\n\n  if (radius) {\n    const bbox = [\n      [position[0] - radius, position[1] - radius],\n      [position[0] + radius, position[1] + radius]\n    ];\n\n    return map.queryRenderedFeatures(bbox, parameters);\n  }\n\n  return map.queryRenderedFeatures(position, parameters);\n};\n\nexport default queryRenderedFeatures;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type GeoJSONFeature from 'mapbox-gl/src/util/vectortile_to_geojson';\nimport type { LayerSpecification } from 'mapbox-gl/src/style-spec/types';\nimport type { MapMouseEvent, MapTouchEvent } from 'mapbox-gl/src/ui/events';\n\nimport MapContext from '../MapContext';\nimport diff from '../../utils/diff';\nimport queryRenderedFeatures from '../../utils/queryRenderedFeatures';\n\nconst eventListeners = [\n  ['onClick', 'click'],\n  ['onHover', 'mousemove'],\n  ['onEnter', 'mouseenter'],\n  ['onLeave', 'mouseleave']\n];\n\ntype InteractionEvent = { ...MapMouseEvent, features?: GeoJSONFeature[] };\n\ntype Props = {|\n  /** Mapbox GL Layer id */\n  id: string,\n\n  /** The id of an existing layer to insert the new layer before. */\n  before?: string,\n\n  /**\n   * Called when the layer is clicked.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onClick?: (event: InteractionEvent) => any,\n\n  /**\n   * Called when the layer is hovered over.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onHover?: (event: InteractionEvent) => any,\n\n  /**\n   * Called when the layer feature is entered.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onEnter?: (event: InteractionEvent) => any,\n\n  /**\n   * Called when the layer feature is leaved.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onLeave?: (event: InteractionEvent) => any,\n\n  /**\n   * Radius to detect features around a clicked/hovered point\n   */\n  radius: number,\n\n  ...LayerSpecification\n|};\n\nclass Layer extends PureComponent<Props> {\n  $key: string;\n\n  $value: any;\n\n  _id: string;\n\n  _map: MapboxMap;\n\n  _onClick: (event: MapMouseEvent | MapTouchEvent) => void;\n\n  _onHover: (event: MapMouseEvent) => void;\n\n  _onEnter: (event: MapMouseEvent) => void;\n\n  _onLeave: (event: MapMouseEvent) => void;\n\n  static displayName = 'Layer';\n\n  static defaultProps = {\n    radius: 0\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this._id = props.id;\n  }\n\n  componentDidMount() {\n    this._addLayer(this.props);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const map = this._map;\n    const { id, before, onClick, ...layer } = this.props;\n\n    if (\n      id !== prevProps.id ||\n      this.props.type !== prevProps.type ||\n      (prevProps.type !== 'background' &&\n        (this.props.source !== prevProps.source ||\n          this.props['source-layer'] !== prevProps['source-layer']))\n    ) {\n      this._id = id;\n      this._map.removeLayer(prevProps.id);\n      this._addLayer(this.props);\n      return;\n    }\n\n    // flowlint sketchy-null-string:off\n    if (before !== prevProps.before && before && map.getLayer(before)) {\n      map.moveLayer(this._id, before);\n    }\n    // flowlint sketchy-null-string:warn\n\n    if (layer.paint !== prevProps.paint) {\n      diff(layer.paint, prevProps.paint).forEach(([key, value]) => {\n        map.setPaintProperty(this._id, key, value);\n      });\n    }\n\n    if (layer.layout !== prevProps.layout) {\n      diff(layer.layout, prevProps.layout).forEach(([key, value]) => {\n        map.setLayoutProperty(this._id, key, value);\n      });\n    }\n\n    // $FlowFixMe\n    if (layer.filter !== prevProps.filter) {\n      if (!layer.filter) {\n        map.setFilter(this._id, undefined);\n      } else {\n        map.setFilter(this._id, layer.filter);\n      }\n    }\n\n    this._updateEventListeners(prevProps, this.props);\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._removeEventListeners(this.props);\n\n    if (this._map.getLayer(this._id)) {\n      this._map.removeLayer(this._id);\n    }\n  }\n\n  _addLayer = (props: Props) => {\n    const map = this._map;\n    const {\n      before,\n      radius,\n      onClick,\n      onHover,\n      onEnter,\n      onLeave,\n      ...layer\n    } = props;\n\n    // flowlint sketchy-null-string:off\n    if (before && map.getLayer(before)) {\n      map.addLayer(layer, before);\n    } else {\n      map.addLayer(layer);\n    }\n    // flowlint sketchy-null-string:warn\n\n    this._addEventListeners(props);\n  };\n\n  _addEventListeners = (props: Props) => {\n    eventListeners.forEach(([propName, eventName]) => {\n      const handlerName = `_${propName}`;\n      if (props[propName]) {\n        this._map.on(eventName, this._id, this[handlerName]);\n      }\n    });\n  };\n\n  _updateEventListeners = (prevProps: Props, props: Props) => {\n    eventListeners.forEach(([propName, eventName]) => {\n      const handlerName = `_${propName}`;\n\n      if (!props[propName] && prevProps[propName]) {\n        this._map.off(eventName, this._id, this[handlerName]);\n      }\n\n      if (props[propName] && !prevProps[propName]) {\n        this._map.on(eventName, this._id, this[handlerName]);\n      }\n    });\n  };\n\n  _removeEventListeners = (props: Props) => {\n    eventListeners.forEach(([propName, eventName]) => {\n      const handlerName = `_${propName}`;\n      if (props[propName]) {\n        this._map.off(eventName, this._id, this[handlerName]);\n      }\n    });\n  };\n\n  _onClick = (event: MapMouseEvent): void => {\n    const position = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onClick({ ...event, features });\n  };\n\n  _onHover = (event: MapMouseEvent): void => {\n    const position = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onHover({ ...event, features });\n  };\n\n  _onEnter = (event: MapMouseEvent): void => {\n    const position = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onEnter({ ...event, features });\n  };\n\n  _onLeave = (event: MapMouseEvent) => {\n    const position: [number, number] = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onLeave({ ...event, features });\n  };\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default Layer;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type { CustomLayerInterface } from 'mapbox-gl/src/style/style_layer/custom_style_layer';\n\nimport MapContext from '../MapContext';\n\ntype Props = {\n  /** The id of an existing layer to insert the new layer before. */\n  before?: string,\n\n  /** Mapbox GL Custom Layer instance */\n  layer: CustomLayerInterface\n};\n\n/**\n * Custom layers allow a user to render directly into the map's GL context\n * using the map's camera.\n */\nclass CustomLayer extends PureComponent<Props> {\n  _id: string;\n\n  _map: MapboxMap;\n\n  static displayName = 'CustomLayer';\n\n  componentDidMount() {\n    const { layer, before } = this.props;\n\n    if (before && this._map.getLayer(before)) {\n      this._map.addLayer(layer, before);\n    } else {\n      this._map.addLayer(layer);\n    }\n\n    this._id = layer.id;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle() || !this._map.getLayer(this._id)) {\n      return;\n    }\n\n    this._map.removeLayer(this._id);\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default CustomLayer;\n","// @flow\n\nimport { Children, cloneElement } from 'react';\nimport type { Element } from 'react';\n\nimport Layer from '../components/Layer';\nimport CustomLayer from '../components/CustomLayer';\nimport type { Children as MapChildren } from '../components/MapGL';\n\ntype LayerLike = Element<typeof Layer> | Element<typeof CustomLayer>;\n\nconst LayerLikeTypes = [Layer, CustomLayer];\nconst isLayerLike = (child: Element<any>) =>\n  LayerLikeTypes.includes(child.type);\n\nconst getLayerId = (child: LayerLike): string => {\n  // $FlowFixMe\n  return child.props.id || child.props.layer.id;\n};\n\nconst forEachLayer = (fn, children: MapChildren) => {\n  Children.forEach(children, (child) => {\n    if (!child) return;\n    if (isLayerLike(child)) fn(child);\n    if (child.props && child.props.children)\n      forEachLayer(fn, child.props.children);\n  });\n};\n\nconst getLayerIds = (children: MapChildren): Array<string> => {\n  const layerIds = [];\n  forEachLayer((child) => {\n    if (!child.props.before) {\n      layerIds.push(getLayerId(child));\n    }\n  }, children);\n  return layerIds;\n};\n\nconst normalizeChildren = (children: MapChildren) => {\n  const layerIds = getLayerIds(children);\n  layerIds.shift();\n\n  const traverse = (_children: MapChildren) => {\n    if (typeof _children === 'function') {\n      return _children;\n    }\n\n    return Children.map(_children, (child: Element<any>) => {\n      if (!child) {\n        return child;\n      }\n\n      if (isLayerLike(child)) {\n        const before: string = child.props.before || layerIds.shift();\n        return cloneElement(child, { before });\n      }\n\n      if (child.props && child.props.children) {\n        return cloneElement(child, {\n          children: traverse(child.props.children)\n        });\n      }\n\n      return child;\n    });\n  };\n\n  const normalizedChildren = traverse(children);\n  return normalizedChildren;\n};\n\nexport default normalizeChildren;\n","// @flow\n\nimport { PureComponent, createElement, createRef } from 'react';\nimport type { ChildrenArray, Element, ElementRef } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxLngLatBoundsLike from 'mapbox-gl/src/geo/lng_lat_bounds';\nimport type { AnimationOptions } from 'mapbox-gl/src/ui/camera';\nimport type { StyleSpecification } from 'mapbox-gl/src/style-spec/types';\nimport type { MapMouseEvent, MapTouchEvent } from 'mapbox-gl/src/ui/events';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\nimport events from './events';\nimport capitalizeFirstLetter from '../../utils/capitalizeFirstLetter';\n\n/* eslint-disable import/no-cycle */\nimport normalizeChildren from '../../utils/normalizeChildren';\n\nimport type { EventProps } from './eventProps';\n\nexport type Viewport = {|\n  latitude: number,\n  longitude: number,\n  zoom: number,\n  pitch?: number,\n  bearing?: number\n|};\n\nexport const jumpTo = 'jumpTo';\nexport const easeTo = 'easeTo';\nexport const flyTo = 'flyTo';\n\nexport type ViewportChangeMethod = 'jumpTo' | 'easeTo' | 'flyTo';\nexport type ViewportChangeEvent = MapMouseEvent | MapTouchEvent;\n\nexport type Children = ChildrenArray<Element<any>>;\n\ntype Props = EventProps & {\n  /** container className */\n  className?: string,\n\n  /** container style */\n  style?: Object,\n\n  /**\n   * The Mapbox style. A string url or a Mapbox GL style object.\n   */\n  mapStyle: string | StyleSpecification,\n\n  /** MapGL children as Sources, Layers, Controls, and custom Components */\n  children?: Children,\n\n  /**\n   * Mapbox API access token for mapbox-gl-js.\n   * Required when using Mapbox vector tiles/styles.\n   */\n  accessToken?: string,\n\n  /** The longitude of the center of the map. */\n  longitude: number,\n\n  /** The latitude of the center of the map. */\n  latitude: number,\n\n  /** The tile zoom level of the map. */\n  zoom: number,\n\n  /** Specify the bearing of the viewport */\n  bearing?: number,\n\n  /** Specify the pitch of the viewport */\n  pitch?: number,\n\n  /** The minimum zoom level of the map (0-22). */\n  minZoom?: number,\n\n  /** The maximum zoom level of the map (0-22). */\n  maxZoom?: number,\n\n  /**\n   * If `true`, the map's position (zoom, center latitude,\n   * center longitude, bearing, and pitch) will be synced\n   * with the hash fragment of the page's URL. For example,\n   * http://path/to/my/page.html#2.59/39.26/53.07/-24.1/60.\n   */\n  hash?: boolean,\n\n  /**\n   * The threshold, measured in degrees, that determines when\n   * the map's bearing (rotation) will snap to north. For\n   * example, with a  bearingSnap of 7, if the user rotates the\n   * map within 7 degrees of north, the map will automatically\n   * snap to exact north.\n   */\n  bearingSnap?: number,\n\n  /**\n   * If `false`, the map's pitch (tilt) control with \"drag to\n   * rotate\" interaction will be disabled.\n   */\n  pitchWithRotate?: boolean,\n\n  /** If `true`, an AttributionControl will be added to the map. */\n  attributionControl?: boolean,\n\n  /* A string representing the position of the Mapbox wordmark on the map. */\n  logoPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right',\n\n  /**\n   * If `true`, map creation will fail if the performance of Mapbox\n   * GL JS would be dramatically worse than expected (i.e. a software\n   * renderer would be used).\n   */\n  failIfMajorPerformanceCaveat?: boolean,\n\n  /**\n   * Mapbox WebGL context creation option.\n   * Useful when you want to export the canvas as a PNG.\n   */\n  preserveDrawingBuffer?: boolean,\n\n  /**\n   * If `true`, the gl context will be created with MSAA antialiasing,\n   * which can be useful for antialiasing custom layers. this is `false`\n   * by default as a performance optimization.\n   */\n  antialias?: boolean,\n\n  /**\n   * If `false`, the map won't attempt to re-request tiles once they\n   * expire per their HTTP `cacheControl`/`expires` headers.\n   */\n  refreshExpiredTiles?: boolean,\n\n  /** If set, the map will be constrained to the given bounds. */\n  maxBounds?: MapboxLngLatBoundsLike,\n\n  /** If `true`, the \"scroll to zoom\" interaction is enabled. */\n  scrollZoom?: boolean | Object,\n\n  /** If `true`, the \"box zoom\" interaction is enabled */\n  boxZoom?: boolean,\n\n  /** If `true`, the \"drag to rotate\" interaction is enabled */\n  dragRotate?: boolean,\n\n  /** If `true`, the \"drag to pan\" interaction is enabled */\n  dragPan?: boolean,\n\n  /** If `true`, keyboard shortcuts are enabled */\n  keyboard?: boolean,\n\n  /** If `true`, the \"double click to zoom\" interaction is enabled */\n  doubleClickZoom?: boolean,\n\n  /**\n   * If `true`, the map will automatically resize\n   * when the browser window resizes.\n   */\n  trackResize?: boolean,\n\n  /**\n   * The maximum number of tiles stored in the tile cache for a given\n   * source. If omitted, the cache will be dynamically sized based on\n   * the current viewport.\n   */\n  maxTileCacheSize?: number,\n\n  /**\n   * If `true`, multiple copies of the world\n   * will be rendered, when zoomed out\n   */\n  renderWorldCopies?: boolean,\n\n  /**\n   * If specified, defines a CSS font-family for locally overriding\n   * generation of glyphs in the 'CJK Unified Ideographs' and\n   * 'Hangul Syllables' ranges. In these ranges, font settings from the\n   * map's style will be ignored, except for font-weight keywords\n   * (light/regular/medium/bold). The purpose of this option is to avoid\n   * bandwidth-intensive glyph server requests.\n   * (see https://www.mapbox.com/mapbox-gl-js/example/local-ideographs )\n   */\n  localIdeographFontFamily?: boolean,\n\n  /**\n   * A callback run before the Map makes a request for an external URL.\n   * The callback can be used to modify the url, set headers, or set the\n   * credentials property for cross-origin requests. Expected to return\n   * an object with a  url property and optionally  headers and\n   * credentials properties.\n   */\n  transformRequest?: (\n    url: string,\n    resourceType: string\n  ) => { url: string, headers?: Object, credentials?: string },\n\n  /**\n   * If true, Resource Timing API information will be collected for\n   * requests made by GeoJSON and Vector Tile web workers (this information\n   * is normally inaccessible from the main Javascript thread). Information\n   * will be returned in a resourceTiming property of relevant data events.\n   */\n  collectResourceTiming?: boolean,\n\n  /**\n   * Controls the duration of the fade-in/fade-out animation for label\n   * collisions, in milliseconds. This setting affects all symbol layers.\n   * This setting does not affect the duration of runtime styling transitions\n   * or raster tile cross-fading.\n   */\n  fadeDuration?: number,\n\n  /**\n   * If `true`, symbols from multiple sources can collide with each\n   * other during collision detection. If `false`, collision detection\n   * is run separately for the symbols in each source.\n   */\n  crossSourceCollisions?: boolean,\n\n  /**\n   * A patch to apply to the default localization table for UI strings,\n   * e.g. control tooltips. The `locale` object maps namespaced UI string IDs\n   * to translated strings in the target language;\n   * see `src/ui/default_locale.js` for an example with all supported\n   * string IDs. The object may specify all UI strings (thereby adding support\n   * for a new translation) or only a subset of strings (thereby patching\n   * the default translation table).\n   */\n  locale?: string,\n\n  /**\n   * `onViewportChange` callback is fired when the user interacted with the\n   * map. The object passed to the callback contains viewport properties\n   * such as `longitude`, `latitude`, `zoom` etc.\n   */\n  onViewportChange?: (viewport: Viewport) => void,\n\n  /**\n   * Map method that will be called after new viewport props are received.\n   */\n  viewportChangeMethod?: ViewportChangeMethod,\n\n  /**\n   * Options common to map movement methods that involve animation,\n   * controlling the duration and easing function of the animation.\n   * This options will be passed to the `viewportChangeMethod` call.\n   * (see https://docs.mapbox.com/mapbox-gl-js/api/#animationoptions)\n   */\n  viewportChangeOptions?: AnimationOptions,\n\n  /** The onLoad callback for the map */\n  onLoad?: Function,\n\n  /** Map cursor style as CSS value */\n  cursorStyle?: string,\n\n  /**\n   * Sets a Boolean indicating whether the map will render an outline around\n   * each tile and the tile ID. These tile boundaries are useful for debugging.\n   * */\n  showTileBoundaries?: boolean\n};\n\ntype State = {\n  loaded: boolean\n};\n\nclass MapGL extends PureComponent<Props, State> {\n  _map: MapboxMap;\n\n  _container: { current: null | ElementRef<'div'> };\n\n  static displayName = 'MapGL';\n\n  static defaultProps = {\n    children: null,\n    className: null,\n    style: null,\n    mapStyle: 'mapbox://styles/mapbox/light-v8',\n    accessToken: null,\n    bearing: 0,\n    pitch: 0,\n    minZoom: 0,\n    maxZoom: 22,\n    maxBounds: null,\n    hash: false,\n    bearingSnap: 7,\n    pitchWithRotate: true,\n    attributionControl: true,\n    logoPosition: 'bottom-left',\n    failIfMajorPerformanceCaveat: false,\n    preserveDrawingBuffer: false,\n    antialias: false,\n    refreshExpiredTiles: true,\n    boxZoom: true,\n    scrollZoom: true,\n    dragRotate: true,\n    dragPan: true,\n    keyboard: true,\n    doubleClickZoom: true,\n    trackResize: true,\n    renderWorldCopies: true,\n    maxTileCacheSize: null,\n    onViewportChange: null,\n    onLoad: null,\n    localIdeographFontFamily: null,\n    transformRequest: null,\n    collectResourceTiming: false,\n    fadeDuration: 300,\n    crossSourceCollisions: true,\n    locale: null,\n    cursorStyle: null,\n    viewportChangeMethod: jumpTo,\n    viewportChangeOptions: null\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    if (mapboxgl) {\n      mapboxgl.accessToken = props.accessToken;\n    }\n\n    this._container = createRef();\n  }\n\n  state = {\n    loaded: false\n  };\n\n  componentDidMount() {\n    if (!mapboxgl) {\n      return;\n    }\n\n    const container = this._container.current;\n\n    const map: MapboxMap = new mapboxgl.Map({\n      container,\n      style: this.props.mapStyle,\n      interactive: !!this.props.onViewportChange,\n      center: [this.props.longitude, this.props.latitude],\n      zoom: this.props.zoom,\n      pitch: this.props.pitch,\n      bearing: this.props.bearing,\n      minZoom: this.props.minZoom,\n      maxZoom: this.props.maxZoom,\n      hash: this.props.hash,\n      bearingSnap: this.props.bearingSnap,\n      pitchWithRotate: this.props.pitchWithRotate,\n      attributionControl: this.props.attributionControl,\n      logoPosition: this.props.logoPosition,\n      failIfMajorPerformanceCaveat: this.props.failIfMajorPerformanceCaveat,\n      preserveDrawingBuffer: this.props.preserveDrawingBuffer,\n      antialias: this.props.antialias,\n      refreshExpiredTiles: this.props.refreshExpiredTiles,\n      maxBounds: this.props.maxBounds,\n      scrollZoom: this.props.scrollZoom,\n      boxZoom: this.props.boxZoom,\n      dragRotate: this.props.dragRotate,\n      dragPan: this.props.dragPan,\n      keyboard: this.props.keyboard,\n      doubleClickZoom: this.props.doubleClickZoom,\n      trackResize: this.props.trackResize,\n      renderWorldCopies: this.props.renderWorldCopies,\n      maxTileCacheSize: this.props.maxTileCacheSize,\n      localIdeographFontFamily: this.props.localIdeographFontFamily,\n      transformRequest: this.props.transformRequest,\n      collectResourceTiming: this.props.collectResourceTiming,\n      fadeDuration: this.props.fadeDuration,\n      crossSourceCollisions: this.props.crossSourceCollisions,\n      locale: this.props.locale\n    });\n\n    this._map = map;\n\n    map.once('load', () => {\n      this.setState({ loaded: true }, this.props.onLoad);\n    });\n\n    if (this.props.onViewportChange) {\n      map.on('dragend', this._onViewportChange);\n      map.on('zoomend', this._onViewportChange);\n      map.on('rotateend', this._onViewportChange);\n      map.on('pitchend', this._onViewportChange);\n      map.on('boxzoomend', this._onViewportChange);\n    }\n\n    events.forEach((event) => {\n      const propName = `on${capitalizeFirstLetter(event)}`;\n      const prop = this.props[propName];\n      if (prop) {\n        if (Array.isArray(prop)) {\n          map.on(event, ...prop);\n        } else {\n          map.on(event, prop);\n        }\n      }\n    });\n\n    if (this.props.cursorStyle) {\n      map.getCanvas().style.cursor = this.props.cursorStyle;\n    }\n\n    if (this.props.showTileBoundaries) {\n      this._map.showTileBoundaries = this.props.showTileBoundaries;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this._updateMapViewport(prevProps, this.props);\n    this._updateMapStyle(prevProps, this.props);\n\n    if (!prevProps.cursorStyle !== this.props.cursorStyle) {\n      this._map.getCanvas().style.cursor = this.props.cursorStyle;\n    }\n\n    if (prevProps.showTileBoundaries !== this.props.showTileBoundaries) {\n      this._map.showTileBoundaries = !!this.props.showTileBoundaries;\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._map) {\n      this._map.remove();\n    }\n  }\n\n  // External apps can access map this way\n  getMap() {\n    return this._map;\n  }\n\n  /**\n   * Update Map style from newProps\n   *\n   * @private\n   * @param {Props} prevProps\n   * @param {Props} newProps\n   */\n  _updateMapStyle(prevProps: Props, newProps: Props): void {\n    const newMapStyle = newProps.mapStyle;\n    const prevMapStyle = prevProps.mapStyle;\n\n    if (newMapStyle !== prevMapStyle) {\n      this.setState({ loaded: false }, () => {\n        this._map.setStyle(newMapStyle);\n        this._map.once('style.load', () => this.setState({ loaded: true }));\n      });\n    }\n  }\n\n  /**\n   * Update Map viewport from newProps\n   *\n   * @private\n   * @param {Props} prevProps\n   * @param {Props} newProps\n   */\n  _updateMapViewport(prevProps: Props, newProps: Props): void {\n    const map: MapboxMap = this._map;\n    const center = map.getCenter();\n\n    const viewportChanged =\n      (newProps.latitude !== prevProps.latitude &&\n        newProps.latitude !== center.lat) ||\n      (newProps.longitude !== prevProps.longitude &&\n        newProps.longitude !== center.lng) ||\n      (newProps.zoom !== prevProps.zoom && newProps.zoom !== map.getZoom()) ||\n      (newProps.pitch !== prevProps.pitch &&\n        newProps.pitch !== map.getPitch()) ||\n      (newProps.bearing !== prevProps.bearing &&\n        newProps.bearing !== map.getBearing());\n\n    if (!viewportChanged) {\n      return;\n    }\n\n    const viewport = {\n      center: [newProps.longitude, newProps.latitude],\n      zoom: newProps.zoom,\n      pitch: newProps.pitch,\n      bearing: newProps.bearing\n    };\n\n    const { viewportChangeMethod, viewportChangeOptions } = this.props;\n    const options = { ...viewportChangeOptions, ...viewport };\n\n    switch (viewportChangeMethod) {\n      case flyTo:\n        map.flyTo(options);\n        break;\n      case jumpTo:\n        map.jumpTo(options);\n        break;\n      case easeTo:\n        map.easeTo(options);\n        break;\n      default:\n        throw new Error('Unknown viewport change method');\n    }\n  }\n\n  /**\n   * fires `onViewportChange` callback when the user interacted with the map.\n   *\n   * @private\n   * @param {ViewportChangeEvent} event\n   */\n  _onViewportChange = (event: ViewportChangeEvent): void => {\n    if (!event.originalEvent) {\n      return;\n    }\n\n    const map = this._map;\n\n    const { lng, lat } = map.getCenter();\n    const zoom = map.getZoom();\n    const pitch = map.getPitch();\n    const bearing = map.getBearing();\n\n    const viewport: Viewport = {\n      latitude: lat,\n      longitude: lng,\n      zoom,\n      pitch,\n      bearing\n    };\n\n    // $FlowFixMe\n    this.props.onViewportChange(viewport);\n  };\n\n  render() {\n    const { loaded } = this.state;\n    const { className, style } = this.props;\n\n    const children = this.props.children\n      ? normalizeChildren(this.props.children)\n      : null;\n\n    return createElement(\n      MapContext.Provider,\n      { value: this._map },\n      createElement(\n        'div',\n        {\n          ref: this._container,\n          style,\n          className\n        },\n        loaded && children\n      )\n    );\n  }\n}\n\nexport default MapGL;\n","const isArraysEqual = (arr1 = [], arr2 = []) => {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let index = 0; index < arr1.length; index += 1) {\n    if (arr1[index] !== arr2[index]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexport default isArraysEqual;\n","// @flow\nimport type { Props } from '../components/Source';\n\nexport default (props: Props) => {\n  switch (props.type) {\n    case 'vector':\n      return { type: 'vector', ...props };\n    case 'raster':\n      return { type: 'raster', ...props };\n    case 'raster-dem':\n      return { type: 'raster-dem', ...props };\n    case 'geojson':\n      return { type: 'geojson', ...props };\n    case 'video':\n      return { type: 'video', ...props };\n    case 'image':\n      return { type: 'image', ...props };\n    default:\n      throw new Error(`Unknown type for '${props.id}' Source`);\n  }\n};\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type { ChildrenArray, Element } from 'react';\nimport type {\n  SourceSpecification,\n  RasterSourceSpecification,\n  VectorSourceSpecification,\n  GeoJSONSourceSpecification,\n  ImageSourceSpecification\n} from 'mapbox-gl/src/style-spec/types';\n\nimport MapContext from '../MapContext';\nimport Layer from '../Layer';\n\n/* eslint-disable import/no-cycle */\nimport isArraysEqual from '../../utils/isArraysEqual';\nimport validateSource from '../../utils/validateSource';\n\nexport type TileSourceSpecification =\n  | VectorSourceSpecification\n  | RasterSourceSpecification;\n\nexport type Props = {\n  /** Mapbox GL Source */\n  ...SourceSpecification,\n\n  /** Mapbox GL Source id */\n  id: string,\n\n  /** Layers */\n  children?: ChildrenArray<Element<typeof Layer>>\n};\n\ntype State = {\n  loaded: boolean\n};\n\nclass Source extends PureComponent<Props, State> {\n  _map: MapboxMap;\n\n  static displayName = 'Source';\n\n  state = {\n    loaded: false\n  };\n\n  componentDidMount() {\n    const { id, children, ...source } = validateSource(this.props);\n    this._map.addSource(id, source);\n    this._map.on('sourcedata', this._onSourceData);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {\n      id: prevId,\n      children: prevChildren,\n      ...prevSource\n    } = validateSource(prevProps);\n    const { id, children, ...source } = validateSource(this.props);\n\n    if (id !== prevId || source.type !== prevSource.type) {\n      this._map.removeSource(prevId);\n      this._map.addSource(id, source);\n      return;\n    }\n\n    if (source.type === 'geojson' && prevSource.type === 'geojson') {\n      this._updateGeoJSONSource(id, prevSource, source);\n      return;\n    }\n\n    if (source.type === 'image' && prevSource.type === 'image') {\n      this._updateImageSource(id, prevSource, source);\n      return;\n    }\n\n    if (source.type === 'vector' && prevSource.type === 'vector') {\n      this._updateTileSource(id, prevSource, source);\n      return;\n    }\n\n    if (source.type === 'raster' && prevSource.type === 'raster') {\n      this._updateTileSource(id, prevSource, source);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._removeSource();\n  }\n\n  _onSourceData = () => {\n    if (!this._map.isSourceLoaded(this.props.id)) {\n      return;\n    }\n\n    this._map.off('sourcedata', this._onSourceData);\n    this.setState({ loaded: true });\n  };\n\n  _updateGeoJSONSource = (\n    id: string,\n    prevSource: GeoJSONSourceSpecification,\n    newSource: GeoJSONSourceSpecification\n  ) => {\n    if (newSource.data !== prevSource.data) {\n      const source = this._map.getSource(id);\n\n      if (source !== undefined) {\n        source.setData(newSource.data);\n      }\n    }\n  };\n\n  _updateImageSource = (\n    id: string,\n    prevSource: ImageSourceSpecification,\n    newSource: ImageSourceSpecification\n  ) => {\n    if (\n      newSource.url !== prevSource.url ||\n      newSource.coordinates !== prevSource.coordinates\n    ) {\n      const source = this._map.getSource(id);\n      if (source !== undefined) {\n        source.updateImage(newSource);\n      }\n    }\n  };\n\n  // https://github.com/mapbox/mapbox-gl-js/pull/8048\n  _updateTileSource = (\n    id: string,\n    prevSource: TileSourceSpecification,\n    newSource: TileSourceSpecification\n  ) => {\n    if (\n      newSource.url === prevSource.url &&\n      isArraysEqual(newSource.tiles, prevSource.tiles)\n    ) {\n      return;\n    }\n\n    const source = this._map.getSource(id);\n\n    /* eslint-disable no-underscore-dangle */\n    if (source._tileJSONRequest) {\n      source._tileJSONRequest.cancel();\n    }\n\n    source.url = newSource.url;\n    source.scheme = newSource.scheme;\n    source._options = { ...source._options, ...newSource };\n    /* eslint-enable no-underscore-dangle */\n\n    const sourceCache = this._map.style.sourceCaches[id];\n    if (sourceCache) {\n      sourceCache.clearTiles();\n    }\n\n    source.load();\n  };\n\n  _removeSource = () => {\n    const { id } = this.props;\n    if (this._map.getSource(id)) {\n      const { layers } = this._map.getStyle();\n      if (layers) {\n        layers.forEach((layer) => {\n          if (layer.source === id) {\n            this._map.removeLayer(layer.id);\n          }\n        });\n      }\n\n      this._map.removeSource(id);\n    }\n  };\n\n  render() {\n    const { loaded } = this.state;\n    const { children } = this.props;\n\n    return createElement(MapContext.Consumer, {}, (map: ?MapboxMap) => {\n      if (map) {\n        this._map = map;\n      }\n\n      // $FlowFixMe\n      return loaded && children;\n    });\n  }\n}\n\nexport default Source;\n","// @flow\n\nimport { createPortal } from 'react-dom';\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxPopup from 'mapbox-gl/src/ui/popup';\nimport type MapboxLngLatBoundsLike from 'mapbox-gl/src/geo/lng_lat_bounds';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /** Popup content. */\n  children: React$Node,\n\n  /** The longitude of the center of the popup. */\n  longitude: number,\n\n  /** The latitude of the center of the popup. */\n  latitude: number,\n\n  /*\n   * If true, a close button will appear\n   * in the top right corner of the popup.\n   */\n  closeButton?: boolean,\n\n  /** If true, the popup will closed when the map is clicked. */\n  closeOnClick?: boolean,\n\n  /** The onClose callback is fired when the popup closed. */\n  onClose?: Function,\n\n  /*\n   * A string indicating the part of the Popup\n   * that should be positioned closest to the coordinate.\n   * */\n  anchor?:\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-left'\n    | 'top-right'\n    | 'bottom-left'\n    | 'bottom-right',\n\n  /**\n   * The offset in pixels as a `PointLike` object to apply\n   * relative to the element's center. Negatives indicate left and up.\n   */\n  offset?: MapboxLngLatBoundsLike,\n\n  /** The className of the popup */\n  className?: string\n};\n\nclass Popup extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _el: HTMLDivElement;\n\n  _popup: MapboxPopup;\n\n  static displayName = 'Popup';\n\n  static defaultProps = {\n    closeButton: true,\n    closeOnClick: true,\n    onClose: null,\n    anchor: null,\n    offset: null,\n    className: null\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this._el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    const {\n      longitude,\n      latitude,\n      offset,\n      closeButton,\n      closeOnClick,\n      onClose,\n      anchor,\n      className\n    } = this.props;\n\n    this._popup = new mapboxgl.Popup({\n      offset,\n      closeButton,\n      closeOnClick,\n      anchor,\n      className\n    });\n\n    this._popup.setDOMContent(this._el);\n    this._popup.setLngLat([longitude, latitude]).addTo(this._map);\n\n    if (onClose) {\n      this._popup.on('close', onClose);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const positionChanged =\n      prevProps.latitude !== this.props.latitude ||\n      prevProps.longitude !== this.props.longitude;\n\n    if (positionChanged) {\n      this._popup.setLngLat([this.props.longitude, this.props.latitude]);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._popup.remove();\n  }\n\n  getPopup() {\n    return this._popup;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return createPortal(this.props.children, this._el);\n    });\n  }\n}\n\nexport default Popup;\n","// @flow\n\nimport { createPortal } from 'react-dom';\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxMarker from 'mapbox-gl/src/ui/marker';\nimport type LngLat from 'mapbox-gl/src/geo/lng_lat';\nimport type { PointLike } from '@mapbox/point-geometry';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /** Marker content */\n  children: React$Node,\n\n  /** The longitude of the center of the marker. */\n  longitude: number,\n\n  /** The latitude of the center of the marker. */\n  latitude: number,\n\n  /**\n   * The offset in pixels as a `PointLike` object to apply\n   * relative to the element's center. Negatives indicate left and up.\n   */\n  offset?: PointLike,\n\n  /**\n   * Boolean indicating whether or not a marker is able to be dragged\n   * to a new position on the map.\n   */\n  draggable?: boolean,\n\n  /** Fired when the marker is finished being dragged */\n  onDragEnd?: (lngLat: LngLat) => any,\n\n  /** Fired when the marker is finished being dragged */\n  onDragStart?: (lngLat: LngLat) => any,\n\n  /** Fired when the marker is dragged */\n  onDrag?: (lngLat: LngLat) => any\n};\n\nclass Marker extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _el: HTMLDivElement;\n\n  _marker: MapboxMarker;\n\n  static displayName = 'Marker';\n\n  static defaultProps = {\n    offset: null,\n    draggable: false\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this._el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    const {\n      longitude,\n      latitude,\n      offset,\n      draggable,\n      onDragEnd,\n      onDragStart,\n      onDrag\n    } = this.props;\n\n    this._marker = new mapboxgl.Marker(this._el, {\n      draggable,\n      offset\n    });\n\n    this._marker.setLngLat([longitude, latitude]).addTo(this._map);\n\n    if (onDragEnd) {\n      this._marker.on('dragend', this._onDragEnd);\n    }\n\n    if (onDragStart) {\n      this._marker.on('dragstart', this._onDragStart);\n    }\n\n    if (onDrag) {\n      this._marker.on('drag', this._onDrag);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const positionChanged =\n      prevProps.latitude !== this.props.latitude ||\n      prevProps.longitude !== this.props.longitude;\n\n    if (positionChanged) {\n      this._marker.setLngLat([this.props.longitude, this.props.latitude]);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._marker.remove();\n  }\n\n  getMarker() {\n    return this._marker;\n  }\n\n  _onDragEnd = (): void => {\n    // $FlowFixMe\n    this.props.onDragEnd(this._marker.getLngLat());\n  };\n\n  _onDragStart = (): void => {\n    // $FlowFixMe\n    this.props.onDragStart(this._marker.getLngLat());\n  };\n\n  _onDrag = (): void => {\n    // $FlowFixMe\n    this.props.onDrag(this._marker.getLngLat());\n  };\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return createPortal(this.props.children, this._el);\n    });\n  }\n}\n\nexport default Marker;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\n\nimport MapContext from '../MapContext';\n\ntype Props = {\n  /** Unique id of the feature. */\n  id: string | number,\n\n  /** The Id of the vector source or GeoJSON source for the feature. */\n  source: string,\n\n  /** For vector tile sources, the sourceLayer is required. */\n  sourceLayer: string,\n\n  /** A set of key-value pairs. The values should be valid JSON types. */\n  state: Object\n};\n\n/**\n * A `FeatureState` component sets the state of a feature.\n */\nclass FeatureState extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { id, source, sourceLayer, state } = this.props;\n    map.setFeatureState({ id, source, sourceLayer }, state);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const map = this._map;\n    const { id, source, sourceLayer, state } = this.props;\n\n    if (\n      id !== prevProps.id ||\n      source !== prevProps.source ||\n      sourceLayer !== prevProps.sourceLayer ||\n      state !== prevProps.state\n    ) {\n      map.removeFeatureState({\n        id: prevProps.id,\n        source: prevProps.source,\n        sourceLayer: prevProps.sourceLayer\n      });\n\n      map.setFeatureState({ id, source, sourceLayer }, state);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    const { id, source, sourceLayer } = this.props;\n    this._map.removeFeatureState({ id, source, sourceLayer });\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default FeatureState;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type { StyleImageInterface } from 'mapbox-gl/src/style/style_image';\n\nimport MapContext from '../MapContext';\n\ntype MapboxImage =\n  | HTMLImageElement\n  | ImageData\n  | { width: number, height: number, data: Uint8Array | Uint8ClampedArray }\n  | StyleImageInterface;\n\ntype Props = {|\n  /** The ID of the image. */\n  id: string,\n\n  /**\n   * The image as an `HTMLImageElement`, `ImageData`, object with `width`,\n   * `height`, and `data` properties with the same format as `ImageData`\n   * or image url string\n   * */\n  image: MapboxImage | string,\n\n  /** The ratio of pixels in the image to physical pixels on the screen */\n  pixelRatio?: number,\n\n  /** Whether the image should be interpreted as an SDF image */\n  sdf?: boolean\n|};\n\nclass Image extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _id: string;\n\n  static defaultProps = {\n    pixelRatio: 1,\n    sdf: false\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this._id = props.id;\n  }\n\n  componentDidMount() {\n    const { image, pixelRatio, sdf } = this.props;\n    this._loadImage(image, data =>\n      this._map.addImage(this._id, data, { pixelRatio, sdf })\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { id, image, pixelRatio, sdf } = this.props;\n\n    if (\n      id !== prevProps.id ||\n      sdf !== prevProps.sdf ||\n      pixelRatio !== prevProps.pixelRatio\n    ) {\n      this._id = id;\n      this._map.removeImage(prevProps.id);\n      this._loadImage(image, data =>\n        this._map.addImage(this._id, data, { pixelRatio, sdf })\n      );\n\n      return;\n    }\n\n    if (image !== prevProps.image) {\n      this._loadImage(image, data => this._map.updateImage(this._id, data));\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle() || !this._map.hasImage(this._id)) {\n      return;\n    }\n\n    this._map.removeImage(this._id);\n  }\n\n  _loadImage = (image: MapboxImage | string, callback: MapboxImage => void) => {\n    if (typeof image === 'string') {\n      this._map.loadImage(image, (error, data) => {\n        if (error) throw error;\n        callback(data);\n      });\n\n      return;\n    }\n\n    callback(image);\n  };\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default Image;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxAttributionControl from 'mapbox-gl/src/ui/control/attribution_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /**\n   * If `true` force a compact attribution that shows the full\n   * attribution on mouse hover, or if  false force the full attribution\n   * control. The default is a responsive attribution that collapses when\n   * the map is less than 640 pixels wide.\n   */\n  compact: boolean,\n\n  /* String or strings to show in addition to any other attributions. */\n  customAttribution: string | Array<string>,\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * An `AttributionControl` control presents the map's attribution information.\n */\nclass AttributionControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxAttributionControl;\n\n  static defaultProps = {\n    position: 'bottom-right'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { compact, customAttribution, position } = this.props;\n\n    const control: MapboxAttributionControl = new mapboxgl.AttributionControl({\n      compact,\n      customAttribution\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default AttributionControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxFullscreenControl from 'mapbox-gl/src/ui/control/fullscreen_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /**\n   * container is the compatible DOM element which should be\n   * made full screen. By default, the map container element\n   * will be made full screen.\n   */\n  container: string,\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * A `FullscreenControl` control contains a button for toggling the map in\n * and out of fullscreen mode.\n */\nclass FullscreenControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxFullscreenControl;\n\n  static defaultProps = {\n    position: 'top-right'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { container, position } = this.props;\n\n    const control: MapboxFullscreenControl = new mapboxgl.FullscreenControl({\n      container\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default FullscreenControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxGeolocateControl from 'mapbox-gl/src/ui/control/geolocate_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /* A Geolocation API PositionOptions object. */\n  positionOptions: PositionOptions,\n\n  /**\n   * A `fitBounds` options object to use when the map is\n   * panned and zoomed to the user's location.\n   */\n  fitBoundsOptions: Object,\n\n  /**\n   * If `true` the Geolocate Control becomes a toggle button and when active\n   * the map will receive updates to the user's location as it changes.\n   */\n  trackUserLocation: boolean,\n\n  /**\n   * By default a dot will be shown on the map at the user's location.\n   * Set to `false` to disable.\n   */\n  showUserLocation: boolean,\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right',\n\n  /**\n   * Fired when the Geolocate Control changes to the background state.\n   */\n  onTrackUserLocationEnd?: Function,\n\n  /**\n   * Fired when the Geolocate Control changes to the active lock state,\n   */\n  onTrackUserLocationStart?: Function,\n\n  /**\n   * Fired on each Geolocation API position update which returned as an error.\n   */\n  onError?: Function,\n\n  /**\n   * Fired on each Geolocation API position update which returned as success.\n   */\n  onGeolocate?: Function\n};\n\n/**\n * A `GeolocateControl` control provides a button that uses the browser's\n * geolocation API to locate the user on the map.\n */\nclass GeolocateControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxGeolocateControl;\n\n  static defaultProps = {\n    positionOptions: { enableHighAccuracy: false, timeout: 6000 },\n    fitBoundsOptions: { maxZoom: 15 },\n    trackUserLocation: false,\n    showUserLocation: true\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const {\n      positionOptions,\n      fitBoundsOptions,\n      trackUserLocation,\n      showUserLocation,\n      position,\n      onTrackUserLocationEnd,\n      onTrackUserLocationStart,\n      onError,\n      onGeolocate\n    } = this.props;\n\n    const control: MapboxGeolocateControl = new mapboxgl.GeolocateControl({\n      positionOptions,\n      fitBoundsOptions,\n      trackUserLocation,\n      showUserLocation\n    });\n\n    if (onTrackUserLocationEnd) {\n      control.on('trackuserlocationend', onTrackUserLocationEnd);\n    }\n\n    if (onTrackUserLocationStart) {\n      control.on('trackuserlocationstart', onTrackUserLocationStart);\n    }\n\n    if (onError) {\n      control.on('error', onError);\n    }\n\n    if (onGeolocate) {\n      control.on('geolocate', onGeolocate);\n    }\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default GeolocateControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxNavigationControl from 'mapbox-gl/src/ui/control/navigation_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /* If true the compass button is included. */\n  showCompass: boolean,\n\n  /* If true the zoom-in and zoom-out buttons are included. */\n  showZoom: boolean,\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * A `NavigationControl` control contains zoom buttons and a compass.\n */\nclass NavigationControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxNavigationControl;\n\n  static defaultProps = {\n    position: 'top-right'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { showCompass, showZoom, position } = this.props;\n\n    const control: MapboxNavigationControl = new mapboxgl.NavigationControl({\n      showCompass,\n      showZoom\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default NavigationControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxScaleControl from 'mapbox-gl/src/ui/control/scale_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /* The maximum length of the scale control in pixels. */\n  maxWidth: number,\n\n  /* Unit of the distance. */\n  unit: 'imperial' | 'metric' | 'nautical',\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * A `ScaleControl` control displays the ratio of a distance on the map\n * to the corresponding distance on the ground.\n */\nclass ScaleControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxScaleControl;\n\n  static defaultProps = {\n    position: 'bottom-right',\n    unit: 'metric'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { maxWidth, unit, position } = this.props;\n\n    const control: MapboxScaleControl = new mapboxgl.ScaleControl({\n      maxWidth,\n      unit\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default ScaleControl;\n","/**\n * Create a new [Mapbox GL JS plugin](https://www.mapbox.com/blog/build-mapbox-gl-js-plugins/) that\n * modifies the layers of the map style to use the 'text-field' that matches the browser language.\n * @constructor\n * @param {object} options - Options to configure the plugin.\n * @param {string[]} [options.supportedLanguages] - List of supported languages\n * @param {Function} [options.languageTransform] - Custom style transformation to apply\n * @param {RegExp} [options.languageField=/^\\{name/] - RegExp to match if a text-field is a language field\n * @param {Function} [options.getLanguageField] - Given a language choose the field in the vector tiles\n * @param {string} [options.languageSource] - Name of the source that contains the different languages.\n * @param {string} [options.defaultLanguage] - Name of the default language to initialize style after loading.\n * @param {string[]} [options.excludedLayerIds] - Name of the layers that should be excluded from translation.\n */\nfunction MapboxLanguage(options) {\n  options = Object.assign({}, options);\n  if (!(this instanceof MapboxLanguage)) {\n    throw new Error('MapboxLanguage needs to be called with the new keyword');\n  }\n\n  this.setLanguage = this.setLanguage.bind(this);\n  this._initialStyleUpdate = this._initialStyleUpdate.bind(this);\n\n  this._defaultLanguage = options.defaultLanguage;\n  this._isLanguageField = options.languageField || /^\\{name/;\n  this._getLanguageField = options.getLanguageField || function nameField(language) {\n    return language === 'mul' ? '{name}' : '{name_' + language + '}';\n  };\n  this._languageSource = options.languageSource || null;\n  this._languageTransform = options.languageTransform || function (style, language) {\n    if (language === 'ar') {\n      return noSpacing(style);\n    } else {\n      return standardSpacing(style);\n    }\n  };\n  this._excludedLayerIds = options.excludedLayerIds || [];\n  this.supportedLanguages = options.supportedLanguages || ['ar', 'en', 'es', 'fr', 'de', 'ja', 'ko', 'mul', 'pt', 'ru', 'zh'];\n}\n\nfunction standardSpacing(style) {\n  var changedLayers = style.layers.map(function (layer) {\n    if (!(layer.layout || {})['text-field']) return layer;\n    var spacing = 0;\n    if (layer['source-layer'] === 'state_label') {\n      spacing = 0.15;\n    }\n    if (layer['source-layer'] === 'marine_label') {\n      if (/-lg/.test(layer.id)) {\n        spacing = 0.25;\n      }\n      if (/-md/.test(layer.id)) {\n        spacing = 0.15;\n      }\n      if (/-sm/.test(layer.id)) {\n        spacing = 0.1;\n      }\n    }\n    if (layer['source-layer'] === 'place_label') {\n      if (/-suburb/.test(layer.id)) {\n        spacing = 0.15;\n      }\n      if (/-neighbour/.test(layer.id)) {\n        spacing = 0.1;\n      }\n      if (/-islet/.test(layer.id)) {\n        spacing = 0.01;\n      }\n    }\n    if (layer['source-layer'] === 'airport_label') {\n      spacing = 0.01;\n    }\n    if (layer['source-layer'] === 'rail_station_label') {\n      spacing = 0.01;\n    }\n    if (layer['source-layer'] === 'poi_label') {\n      if (/-scalerank/.test(layer.id)) {\n        spacing = 0.01;\n      }\n    }\n    if (layer['source-layer'] === 'road_label') {\n      if (/-label-/.test(layer.id)) {\n        spacing = 0.01;\n      }\n      if (/-shields/.test(layer.id)) {\n        spacing = 0.05;\n      }\n    }\n    return Object.assign({}, layer, {\n      layout: Object.assign({}, layer.layout, {\n        'text-letter-spacing': spacing\n      })\n    });\n  });\n\n  return Object.assign({}, style, {\n    layers: changedLayers\n  });\n}\n\nfunction noSpacing(style) {\n  var changedLayers = style.layers.map(function (layer) {\n    if (!(layer.layout || {})['text-field']) return layer;\n    var spacing = 0;\n    return Object.assign({}, layer, {\n      layout: Object.assign({}, layer.layout, {\n        'text-letter-spacing': spacing\n      })\n    });\n  });\n\n  return Object.assign({}, style, {\n    layers: changedLayers\n  });\n}\n\nfunction isNameStringField(isLangField, property) {\n  return typeof property === 'string' && isLangField.test(property);\n}\n\nfunction isNameFunctionField(isLangField, property) {\n  return property.stops && property.stops.filter(function (stop) {\n    return isLangField.test(stop[1]);\n  }).length > 0;\n}\n\nfunction adaptPropertyLanguage(isLangField, property, languageFieldName) {\n  if (isNameStringField(isLangField, property)) return languageFieldName;\n  if (isNameFunctionField(isLangField, property)) {\n    var newStops = property.stops.map(function (stop) {\n      if (isLangField.test(stop[1])) {\n        return [stop[0], languageFieldName];\n      }\n      return stop;\n    });\n    return Object.assign({}, property, {\n      stops: newStops\n    });\n  }\n  return property;\n}\n\nfunction changeLayerTextProperty(isLangField, layer, languageFieldName, excludedLayerIds) {\n  if (layer.layout && layer.layout['text-field'] && excludedLayerIds.indexOf(layer.id) === -1) {\n    return Object.assign({}, layer, {\n      layout: Object.assign({}, layer.layout, {\n        'text-field': adaptPropertyLanguage(isLangField, layer.layout['text-field'], languageFieldName)\n      })\n    });\n  }\n  return layer;\n}\n\nfunction findStreetsSource(style) {\n  var sources = Object.keys(style.sources).filter(function (sourceName) {\n    var source = style.sources[sourceName];\n    return /mapbox-streets-v\\d/.test(source.url);\n  });\n  return sources[0];\n}\n\n/**\n * Explicitly change the language for a style.\n * @param {object} style - Mapbox GL style to modify\n * @param {string} language - The language iso code\n * @returns {object} the modified style\n */\nMapboxLanguage.prototype.setLanguage = function (style, language) {\n  if (this.supportedLanguages.indexOf(language) < 0) throw new Error('Language ' + language + ' is not supported');\n  var streetsSource = this._languageSource || findStreetsSource(style);\n  if (!streetsSource) return style;\n\n  var field = this._getLanguageField(language);\n  var isLangField = this._isLanguageField;\n  var excludedLayerIds = this._excludedLayerIds;\n  var changedLayers = style.layers.map(function (layer) {\n    if (layer.source === streetsSource) return changeLayerTextProperty(isLangField, layer, field, excludedLayerIds);\n    return layer;\n  });\n\n  var languageStyle = Object.assign({}, style, {\n    layers: changedLayers\n  });\n\n  return this._languageTransform(languageStyle, language);\n};\n\nMapboxLanguage.prototype._initialStyleUpdate = function () {\n  var style = this._map.getStyle();\n  var language = this._defaultLanguage || browserLanguage(this.supportedLanguages);\n\n  // We only update the style once\n  this._map.off('styledata', this._initialStyleUpdate);\n  this._map.setStyle(this.setLanguage(style, language));\n};\n\nfunction browserLanguage(supportedLanguages) {\n  var language = navigator.languages ? navigator.languages[0] : (navigator.language || navigator.userLanguage);\n  var parts = language.split('-');\n  var languageCode = language;\n  if (parts.length > 1) {\n    languageCode = parts[0];\n  }\n  if (supportedLanguages.indexOf(languageCode) > -1) {\n    return languageCode;\n  }\n  return null;\n}\n\nMapboxLanguage.prototype.onAdd = function (map) {\n  this._map = map;\n  this._map.on('styledata', this._initialStyleUpdate);\n  this._container = document.createElement('div');\n  return this._container;\n};\n\nMapboxLanguage.prototype.onRemove = function () {\n  this._map.off('styledata', this._initialStyleUpdate);\n  this._map = undefined;\n};\n\nfunction ie11Polyfill() {\n  if (typeof Object.assign != 'function') {\n    // Must be writable: true, enumerable: false, configurable: true\n    Object.defineProperty(Object, 'assign', {\n      // eslint-disable-next-line no-unused-vars\n      value: function assign(target, varArgs) { // .length of function is 2\n        // eslint-disable-next-line strict\n        'use strict';\n        if (target === null) { // TypeError if undefined or null\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var to = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var nextSource = arguments[index];\n\n          if (nextSource !== null) { // Skip over if undefined or null\n            for (var nextKey in nextSource) {\n              // Avoid bugs when hasOwnProperty is shadowed\n              if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n        return to;\n      },\n      writable: true,\n      configurable: true\n    });\n  }\n}\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = MapboxLanguage;\n} else {\n  ie11Polyfill();\n  window.MapboxLanguage = MapboxLanguage;\n}\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxLanguageControl from '@mapbox/mapbox-gl-language/index';\n\nimport MapboxLanguage from '@mapbox/mapbox-gl-language';\nimport MapContext from '../MapContext';\n\ntype Props = {\n  /** List of supported languages */\n  supportedLanguages?: string[],\n\n  /** Custom style transformation to apply */\n  languageTransform?: Function,\n\n  /**\n   * RegExp to match if a text-field is a language field\n   * (optional, default /^\\{name/)\n   */\n  languageField?: RegExp,\n\n  /** Given a language choose the field in the vector tiles */\n  getLanguageField?: Function,\n\n  /** Name of the source that contains the different languages. */\n  languageSource?: string,\n\n  /** Name of the default language to initialize style after loading. */\n  defaultLanguage?: string,\n\n  /** Name of the language to set */\n  language?: string\n};\n\n/**\n * Adds support for switching the language of your map style.\n */\nclass LanguageControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxLanguageControl;\n\n  static defaultProps = {};\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const {\n      supportedLanguages,\n      languageTransform,\n      languageField,\n      getLanguageField,\n      languageSource,\n      defaultLanguage\n    } = this.props;\n\n    const control: MapboxLanguageControl = new MapboxLanguage({\n      supportedLanguages,\n      languageTransform,\n      languageField,\n      getLanguageField,\n      languageSource,\n      defaultLanguage\n    });\n\n    map.addControl(control);\n    this._control = control;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.language !== this.props.language) {\n      this._setLanguage();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  _setLanguage = () => {\n    const { language } = this.props;\n    const map = this._map;\n    const control = this._control;\n\n    if (language) {\n      map.setStyle(control.setLanguage(map.getStyle(), language));\n    }\n  };\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default LanguageControl;\n","var trafficLayers = [\n  {\n    'id': 'traffic-street-link-bg',\n    'type': 'line',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'source': 'mapbox://mapbox.mapbox-traffic-v1',\n    'source-layer': 'traffic',\n    'minzoom': 15,\n    'filter': [\n      'all',\n      [\n        '==',\n        '$type',\n        'LineString'\n      ],\n      [\n        'all',\n        [\n          'has',\n          'congestion'\n        ],\n        [\n          'in',\n          'class',\n          'link',\n          'motorway_link',\n          'service',\n          'street'\n        ]\n      ]\n    ],\n    'layout': {\n      'visibility': 'visible',\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            14,\n            2.5\n          ],\n          [\n            20,\n            15.5\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(145, 95%, 30%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 42%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 37%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 22%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            14,\n            2\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-opacity': {\n        'base': 1,\n        'stops': [\n          [\n            15,\n            0\n          ],\n          [\n            16,\n            1\n          ]\n        ]\n      }\n    }\n  },\n  {\n    'id': 'traffic-secondary-tertiary-bg',\n    'type': 'line',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'source': 'mapbox://mapbox.mapbox-traffic-v1',\n    'source-layer': 'traffic',\n    'minzoom': 6,\n    'filter': [\n      'all',\n      [\n        '==',\n        '$type',\n        'LineString'\n      ],\n      [\n        'all',\n        [\n          'has',\n          'congestion'\n        ],\n        [\n          'in',\n          'class',\n          'secondary',\n          'tertiary'\n        ]\n      ]\n    ],\n    'layout': {\n      'visibility': 'visible',\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            9,\n            1.5\n          ],\n          [\n            18,\n            11\n          ],\n          [\n            20,\n            16.5\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(145, 95%, 30%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 42%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 37%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 22%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            10,\n            0.5\n          ],\n          [\n            15,\n            5\n          ],\n          [\n            18,\n            11\n          ],\n          [\n            20,\n            14.5\n          ]\n        ]\n      },\n      'line-opacity': {\n        'base': 1,\n        'stops': [\n          [\n            13,\n            0\n          ],\n          [\n            14,\n            1\n          ]\n        ]\n      }\n    }\n  },\n  {\n    'id': 'traffic-primary-bg',\n    'type': 'line',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'source': 'mapbox://mapbox.mapbox-traffic-v1',\n    'source-layer': 'traffic',\n    'minzoom': 6,\n    'filter': [\n      'all',\n      [\n        '==',\n        '$type',\n        'LineString'\n      ],\n      [\n        'all',\n        [\n          '==',\n          'class',\n          'primary'\n        ],\n        [\n          'has',\n          'congestion'\n        ]\n      ]\n    ],\n    'layout': {\n      'visibility': 'visible',\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            10,\n            0.75\n          ],\n          [\n            15,\n            6\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(145, 95%, 30%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 42%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 37%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 22%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.2,\n        'stops': [\n          [\n            10,\n            0\n          ],\n          [\n            12,\n            1.5\n          ],\n          [\n            18,\n            13\n          ],\n          [\n            20,\n            16\n          ]\n        ]\n      },\n      'line-opacity': {\n        'base': 1,\n        'stops': [\n          [\n            11,\n            0\n          ],\n          [\n            12,\n            1\n          ]\n        ]\n      }\n    }\n  },\n  {\n    'id': 'traffic-trunk-bg',\n    'type': 'line',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'source': 'mapbox://mapbox.mapbox-traffic-v1',\n    'source-layer': 'traffic',\n    'minzoom': 6,\n    'filter': [\n      'all',\n      [\n        '==',\n        '$type',\n        'LineString'\n      ],\n      [\n        'all',\n        [\n          '==',\n          'class',\n          'trunk'\n        ],\n        [\n          'has',\n          'congestion'\n        ]\n      ]\n    ],\n    'layout': {\n      'visibility': 'visible',\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            8,\n            0.5\n          ],\n          [\n            9,\n            2.25\n          ],\n          [\n            18,\n            13\n          ],\n          [\n            20,\n            17.5\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(145, 95%, 30%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 42%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 37%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 22%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            7,\n            0\n          ],\n          [\n            9,\n            1\n          ],\n          [\n            18,\n            13\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-opacity': 1\n    }\n  },\n  {\n    'id': 'traffic-motorway-bg',\n    'type': 'line',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'source': 'mapbox://mapbox.mapbox-traffic-v1',\n    'source-layer': 'traffic',\n    'minzoom': 6,\n    'filter': [\n      'all',\n      [\n        '==',\n        '$type',\n        'LineString'\n      ],\n      [\n        'all',\n        [\n          '==',\n          'class',\n          'motorway'\n        ],\n        [\n          'has',\n          'congestion'\n        ]\n      ]\n    ],\n    'layout': {\n      'visibility': 'visible',\n      'line-join': 'round',\n      'line-cap': 'round'\n    },\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            6,\n            0.5\n          ],\n          [\n            9,\n            3\n          ],\n          [\n            18,\n            16\n          ],\n          [\n            20,\n            20\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(145, 95%, 30%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 42%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 37%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 22%)'\n          ]\n        ]\n      },\n      'line-opacity': 1,\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            7,\n            0\n          ],\n          [\n            9,\n            1.2\n          ],\n          [\n            11,\n            1.2\n          ],\n          [\n            18,\n            10\n          ],\n          [\n            20,\n            15.5\n          ]\n        ]\n      }\n    }\n  },\n  {\n    'id': 'traffic-primary',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'ref': 'traffic-primary-bg',\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            10,\n            1\n          ],\n          [\n            15,\n            4\n          ],\n          [\n            20,\n            16\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(142, 55%, 50%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 55%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 50%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 35%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.2,\n        'stops': [\n          [\n            10,\n            0\n          ],\n          [\n            12,\n            1.5\n          ],\n          [\n            18,\n            13\n          ],\n          [\n            20,\n            16\n          ]\n        ]\n      },\n      'line-opacity': 1\n    }\n  },\n  {\n    'id': 'traffic-secondary-tertiary',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'ref': 'traffic-secondary-tertiary-bg',\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            9,\n            0.5\n          ],\n          [\n            18,\n            9\n          ],\n          [\n            20,\n            14\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(142, 55%, 50%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 55%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 50%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 35%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            10,\n            0.5\n          ],\n          [\n            15,\n            5\n          ],\n          [\n            18,\n            11\n          ],\n          [\n            20,\n            14.5\n          ]\n        ]\n      },\n      'line-opacity': 1\n    }\n  },\n  {\n    'id': 'traffic-street-link',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'ref': 'traffic-street-link-bg',\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            14,\n            1.5\n          ],\n          [\n            20,\n            13.5\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(142, 55%, 50%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 55%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 50%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 35%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            14,\n            2\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-opacity': 1\n    }\n  },\n  {\n    'id': 'traffic-trunk',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'ref': 'traffic-trunk-bg',\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            8,\n            0.75\n          ],\n          [\n            18,\n            11\n          ],\n          [\n            20,\n            15\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(142, 55%, 50%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 55%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 50%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 35%)'\n          ]\n        ]\n      },\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            7,\n            0\n          ],\n          [\n            9,\n            1\n          ],\n          [\n            18,\n            13\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-opacity': 1\n    }\n  },\n  {\n    'id': 'traffic-motorway',\n    'metadata': {\n      'mapbox:group': '4053de47c16e55481b10fd748eaa994c'\n    },\n    'ref': 'traffic-motorway-bg',\n    'paint': {\n      'line-width': {\n        'base': 1.5,\n        'stops': [\n          [\n            6,\n            0.5\n          ],\n          [\n            9,\n            1.5\n          ],\n          [\n            18,\n            14\n          ],\n          [\n            20,\n            18\n          ]\n        ]\n      },\n      'line-color': {\n        'base': 1,\n        'type': 'categorical',\n        'property': 'congestion',\n        'stops': [\n          [\n            'low',\n            'hsl(142, 55%, 50%)'\n          ],\n          [\n            'moderate',\n            'hsl(30, 100%, 55%)'\n          ],\n          [\n            'heavy',\n            'hsl(355, 100%, 50%)'\n          ],\n          [\n            'severe',\n            'hsl(355, 70%, 35%)'\n          ]\n        ]\n      },\n      'line-opacity': 1,\n      'line-offset': {\n        'base': 1.5,\n        'stops': [\n          [\n            7,\n            0\n          ],\n          [\n            9,\n            1.2\n          ],\n          [\n            11,\n            1.2\n          ],\n          [\n            18,\n            10\n          ],\n          [\n            20,\n            15.5\n          ]\n        ]\n      }\n    }\n  }\n];\n\nfunction addLayers(style, layers, before) {\n  for (var i = 0; i < style.layers.length; i++) {\n    var layer = style.layers[i];\n    if (before === layer.id) {\n      var newLayers = style.layers.slice(0, i).concat(layers).concat(style.layers.slice(i));\n      return Object.assign({ }, style, {\n        layers: newLayers\n      });\n    }\n  }\n  return style;\n}\n\n/**\n * Create a new [Mapbox GL JS plugin](https://www.mapbox.com/blog/build-mapbox-gl-js-plugins/) that allows you to hide and show\n * traffic layers in your map and an optional toggle button.\n * @constructor\n * @param {object} options - Options to configure the plugin.\n * @param {boolean} [options.showTraffic=false] - Show or hide traffic overlay by default.\n * @param {boolean} [options.showTrafficButton=true] - Show a toggle button to turn traffic on and off.\n * @param {RegExp} [options.trafficSource=/mapbox-traffic-v\\d/] - The traffic source regex used to determine whether a layer displays traffic or not.\n */\nfunction MapboxTraffic(options) {\n  if (!(this instanceof MapboxTraffic)) {\n    throw new Error('MapboxTraffic needs to be called with the new keyword');\n  }\n\n  this.options = Object.assign({\n    showTraffic: false,\n    showTrafficButton: true,\n    trafficSource: /mapbox-traffic-v\\d/\n  }, options);\n\n  this.render = this.render.bind(this);\n  this.toggleTraffic = this.toggleTraffic.bind(this);\n  this._hideTraffic = this._hideTraffic.bind(this);\n  this._showTraffic = this._showTraffic.bind(this);\n  this._hasTraffic = this._hasTraffic.bind(this);\n  this._toggle = new TrafficButton({\n    show: this.options.showTrafficButton,\n    onToggle: this.toggleTraffic.bind(this)\n  });\n}\n\nMapboxTraffic.prototype._hasTraffic = function () {\n  var style = this._map.getStyle();\n  var trafficSource = this.options.trafficSource;\n  return Object.keys(style.sources).filter(function (sourceName) {\n    return trafficSource.test(sourceName);\n  }).length > 0;\n};\n\nMapboxTraffic.prototype.toggleTraffic = function () {\n  this.options.showTraffic = !this.options.showTraffic;\n  this.render();\n};\n\nMapboxTraffic.prototype.render = function () {\n  if (!this._hasTraffic()) {\n    this._map.addSource('mapbox://mapbox.mapbox-traffic-v1', {\n      type: 'vector',\n      url: 'mapbox://mapbox.mapbox-traffic-v1'\n    });\n\n    var roadLayers = this._map.getStyle().layers.filter(function (layer) {\n      return layer['source-layer'] === 'road';\n    });\n    var topRoadLayer = roadLayers[roadLayers.length - 1].id;\n    var style = this._map.getStyle();\n    var trafficStyle = addLayers(style, trafficLayers, topRoadLayer);\n    this._map.setStyle(trafficStyle);\n  }\n\n  if (this.options.showTraffic) {\n    this._showTraffic();\n    this._toggle.setMapIcon();\n  } else {\n    this._hideTraffic();\n    this._toggle.setTrafficIcon();\n  }\n};\n\nMapboxTraffic.prototype._hideTraffic = function () {\n  var style = this._map.getStyle();\n  var source = this.options.trafficSource;\n  style.layers.forEach(function (layer) {\n    if (source.test(layer['source'])) {\n      layer['layout'] = layer['layout'] || {};\n      layer['layout']['visibility'] = 'none';\n    }\n  });\n  this._map.setStyle(style);\n};\n\nMapboxTraffic.prototype._showTraffic = function () {\n  var style = this._map.getStyle();\n  var source = this.options.trafficSource;\n  style.layers.forEach(function (layer) {\n    if (source.test(layer['source'])) {\n      layer['layout'] = layer['layout'] || {};\n      layer['layout']['visibility'] = 'visible';\n    }\n  });\n  this._map.setStyle(style);\n};\n\nMapboxTraffic.prototype.onAdd = function (map) {\n  this._map = map;\n  map.on('load', this.render);\n  return this._toggle.elem;\n};\n\nMapboxTraffic.prototype.onRemove = function () {\n  this._map.off('load', this.render);\n\n  var elem = this._toggle.elem;\n  elem.parentNode.removeChild(elem);\n  this._map = undefined;\n};\n\nfunction container(child, show) {\n  var container = document.createElement('div');\n  container.className = 'mapboxgl-ctrl mapboxgl-ctrl-group';\n  container.appendChild(child);\n  if (!show) {\n    container.style.display = 'none';\n  }\n  return container;\n}\n\nfunction button() {\n  var btn = document.createElement('button');\n  btn.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-traffic';\n  btn.type = 'button';\n  btn['aria-label'] = 'Inspect';\n  return btn;\n}\n\nfunction TrafficButton(options) {\n  options = Object.assign({\n    show: true,\n    onToggle: function () {}\n  }, options);\n\n  this._btn = button();\n  this._btn.onclick = options.onToggle;\n  this.elem = container(this._btn, options.show);\n}\n\nTrafficButton.prototype.setTrafficIcon = function () {\n  this._btn.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-traffic';\n};\n\nTrafficButton.prototype.setMapIcon = function () {\n  this._btn.className = 'mapboxgl-ctrl-icon mapboxgl-ctrl-map';\n};\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = MapboxTraffic;\n} else {\n  window.MapboxTraffic = MapboxTraffic;\n}\n","// @flow\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxTrafficControl from '@mapbox/mapbox-gl-traffic';\n\nimport MapboxTraffic from '@mapbox/mapbox-gl-traffic';\nimport MapContext from '../MapContext';\n\ntype Props = {\n  /** Show or hide traffic overlay by default. */\n  showTraffic?: Boolean,\n\n  /** Show a toggle button to turn traffic on and off. */\n  showTrafficButton?: Boolean,\n\n  /**\n   * The traffic source regex used to determine whether a layer displays\n   * traffic or not\n   * */\n  trafficSource?: RegExp\n};\n\n/** Add a traffic toggle control. */\nclass TrafficControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxTrafficControl;\n\n  static defaultProps = {\n    showTraffic: false,\n    showTrafficButton: true,\n    trafficSource: /mapbox-traffic-v\\d/\n  };\n\n  componentDidMount() {\n    this._addControl();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.showTraffic !== this.props.showTraffic) {\n      this._control.toggleTraffic();\n    }\n\n    const shouldUpdate =\n      prevProps.showTrafficButton !== this.props.showTrafficButton ||\n      prevProps.trafficSource !== this.props.trafficSource;\n\n    if (shouldUpdate) {\n      this._map.removeControl(this._control);\n\n      this._addControl();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  _addControl = () => {\n    const { showTraffic, showTrafficButton, trafficSource } = this.props;\n\n    const control = new MapboxTraffic({\n      showTraffic,\n      showTrafficButton,\n      trafficSource\n    });\n\n    this._map.addControl(control);\n    this._control = control;\n  };\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default TrafficControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type { FilterSpecification } from 'mapbox-gl/src/style-spec/types';\n\nimport MapContext from '../MapContext';\nimport isArraysEqual from '../../utils/isArraysEqual';\n\ntype Props = {|\n  /** Mapbox GL Layer id */\n  layerId: string,\n  /**\n   * The filter, conforming to the Mapbox Style Specification's\n   * filter definition. (see https://docs.mapbox.com/mapbox-gl-js/style-spec/#other-filter)\n   * If null or undefined is provided, the function removes any existing filter\n   * from the layer.\n   * */\n  filter: FilterSpecification,\n\n  /**\n   * Whether to check if the filter conforms to the Mapbox GL\n   * Style Specification. Disabling validation is a performance optimization\n   * that should only be used if you have previously validated the values you\n   * will be passing to this function.\n   * */\n  validate?: boolean\n|};\n\nclass Filter extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  static defaultProps = {\n    validate: true\n  };\n\n  componentDidMount() {\n    this._setFilter();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevFilter = prevProps.filter;\n    const prevValidate = prevProps.validate;\n    const { filter, validate } = this.props;\n\n    const shouldUpdate =\n      !isArraysEqual(prevFilter, filter) || prevValidate !== validate;\n\n    if (shouldUpdate) {\n      this._setFilter();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n    const { layerId } = this.props;\n    const targetLayer = this._map.getLayer(layerId);\n\n    if (targetLayer === undefined) {\n      return;\n    }\n\n    this._map.setFilter(layerId, undefined);\n  }\n\n  _setFilter() {\n    const { layerId, filter, validate } = this.props;\n    const targetLayer = this._map.getLayer(layerId);\n\n    if (targetLayer === undefined) {\n      return;\n    }\n\n    if (!Array.isArray(filter)) {\n      this._map.setFilter(layerId, undefined);\n    } else {\n      this._map.setFilter(layerId, filter, { validate });\n    }\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default Filter;\n"],"names":["MapContext","createContext","mapboxgl","Object","prototype","toString","call","global","process","browser","require","module","string","charAt","toUpperCase","slice","diff","newProps","prevProps","keys","Set","_toConsumableArray","reduce","acc","key","value","push","queryRenderedFeatures","map","layerId","position","radius","parameters","layers","bbox","eventListeners","Layer","props","_this","_map","before","layer","onClick","onHover","onEnter","onLeave","getLayer","addLayer","_addEventListeners","forEach","propName","eventName","handlerName","on","_id","off","event","point","x","y","features","id","componentDidMount","_addLayer","this","componentDidUpdate","type","source","removeLayer","moveLayer","paint","setPaintProperty","_this2","layout","setLayoutProperty","filter","setFilter","undefined","_updateEventListeners","componentWillUnmount","getStyle","_removeEventListeners","render","createElement","Consumer","_this3","PureComponent","CustomLayer","LayerLikeTypes","isLayerLike","child","includes","getLayerIds","children","layerIds","forEachLayer","fn","Children","getLayerId","MapGL","loaded","originalEvent","getCenter","lng","viewport","latitude","lat","longitude","zoom","getZoom","pitch","getPitch","bearing","getBearing","onViewportChange","accessToken","_container","createRef","container","current","Map","style","mapStyle","interactive","center","minZoom","maxZoom","hash","bearingSnap","pitchWithRotate","attributionControl","logoPosition","failIfMajorPerformanceCaveat","preserveDrawingBuffer","antialias","refreshExpiredTiles","maxBounds","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","trackResize","renderWorldCopies","maxTileCacheSize","localIdeographFontFamily","transformRequest","collectResourceTiming","fadeDuration","crossSourceCollisions","locale","once","setState","onLoad","_onViewportChange","events","capitalizeFirstLetter","prop","Array","isArray","cursorStyle","getCanvas","cursor","showTileBoundaries","_updateMapViewport","_updateMapStyle","remove","getMap","newMapStyle","prevMapStyle","setStyle","viewportChangeMethod","options","viewportChangeOptions","flyTo","jumpTo","easeTo","Error","state","className","shift","traverse","_children","cloneElement","normalizeChildren","Provider","ref","isArraysEqual","arr1","arr2","length","index","Source","isSourceLoaded","_onSourceData","prevSource","newSource","data","getSource","setData","url","coordinates","updateImage","tiles","_tileJSONRequest","cancel","scheme","_options","sourceCache","sourceCaches","clearTiles","load","removeSource","validateSource","addSource","prevId","_updateTileSource","_updateImageSource","_updateGeoJSONSource","_removeSource","Popup","_el","document","offset","closeButton","closeOnClick","onClose","anchor","_popup","setDOMContent","setLngLat","addTo","getPopup","createPortal","Marker","onDragEnd","_marker","getLngLat","onDragStart","onDrag","draggable","_onDragEnd","_onDragStart","_onDrag","getMarker","FeatureState","sourceLayer","setFeatureState","removeFeatureState","Image","image","callback","loadImage","error","pixelRatio","sdf","_loadImage","addImage","removeImage","hasImage","_this4","AttributionControl","compact","customAttribution","control","addControl","_control","removeControl","getControl","FullscreenControl","GeolocateControl","positionOptions","fitBoundsOptions","trackUserLocation","showUserLocation","onTrackUserLocationEnd","onTrackUserLocationStart","onError","onGeolocate","enableHighAccuracy","timeout","NavigationControl","showCompass","showZoom","ScaleControl","maxWidth","unit","MapboxLanguage","assign","setLanguage","bind","_initialStyleUpdate","_defaultLanguage","defaultLanguage","_isLanguageField","languageField","_getLanguageField","getLanguageField","language","_languageSource","languageSource","_languageTransform","languageTransform","changedLayers","noSpacing","spacing","test","standardSpacing","_excludedLayerIds","excludedLayerIds","supportedLanguages","adaptPropertyLanguage","isLangField","property","languageFieldName","isNameStringField","stops","stop","isNameFunctionField","newStops","indexOf","streetsSource","sources","sourceName","findStreetsSource","field","changeLayerTextProperty","languageStyle","navigator","languages","userLanguage","parts","split","languageCode","browserLanguage","onAdd","onRemove","LanguageControl","_setLanguage","trafficLayers","MapboxTraffic","showTraffic","showTrafficButton","trafficSource","toggleTraffic","_hideTraffic","_showTraffic","_hasTraffic","_toggle","TrafficButton","show","onToggle","btn","_btn","onclick","elem","appendChild","display","roadLayers","topRoadLayer","trafficStyle","i","newLayers","concat","addLayers","setMapIcon","setTrafficIcon","parentNode","removeChild","TrafficControl","_addControl","Filter","_setFilter","prevFilter","prevValidate","validate"],"mappings":"gqCAMA,IAAMA,EAAkCC,EAAc,MCGhDC,IAL+C,qBAAnDC,OAAOC,UAAUC,SAASC,KAAKC,OAAOC,WACrCD,OAAOC,QAAQC,SAIqBC,QAAQ,aAAe,OCP/C,CACb,SACA,SACA,YACA,UACA,YACA,YACA,QACA,WACA,aACA,aACA,WACA,cACA,aACA,WACA,YACA,cACA,YACA,OACA,UACA,YACA,OACA,UACA,YACA,OACA,UACA,cACA,SACA,YACA,aACA,QACA,WACA,eACA,aACA,gBACA,mBACA,uBACA,OACA,QACA,OACA,YACA,aACA,cACA,mBACA,qBCxCFC,MAJA,SAA+BC,UACtBA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,ICGjDC,EAAO,SAACC,EAAmBC,YAAnBD,IAAAA,EAAe,aAAIC,IAAAA,EAAgB,QACzCC,EAAO,IAAIC,gBAAQjB,OAAOgB,KAAKF,MAAcd,OAAOgB,KAAKD,aACxDG,EAAIF,GAAMG,QAAO,SAACC,EAAKC,OACtBC,EAAQR,EAASO,UACnBC,IAAUP,EAAUM,IACtBD,EAAIG,KAAK,CAACF,EAAKC,IAEVF,IACN,KCXCI,EAAwB,SAC5BC,EACAC,EACAC,EACAC,OAEMC,EAAa,CAAEC,OAAQ,CAACJ,OAE1BE,EAAQ,KACJG,EAAO,CACX,CAACJ,EAAS,GAAKC,EAAQD,EAAS,GAAKC,GACrC,CAACD,EAAS,GAAKC,EAAQD,EAAS,GAAKC,WAGhCH,EAAID,sBAAsBO,EAAMF,UAGlCJ,EAAID,sBAAsBG,EAAUE,ICRvCG,EAAiB,CACrB,CAAC,UAAW,SACZ,CAAC,UAAW,aACZ,CAAC,UAAW,cACZ,CAAC,UAAW,eAgERC,yBAuBQC,kCACJA,wNAmEI,SAACA,OACLT,EAAMU,EAAKC,KAEfC,EAOEH,EAPFG,OAMGC,GACDJ,EANFN,OAMEM,EALFK,QAKEL,EAJFM,QAIEN,EAHFO,QAGEP,EAFFQ,UAEER,gEAGAG,GAAUZ,EAAIkB,SAASN,GACzBZ,EAAImB,SAASN,EAAOD,GAEpBZ,EAAImB,SAASN,KAIVO,mBAAmBX,mCAGL,SAACA,GACpBF,EAAec,SAAQ,gBAAEC,OAAUC,OAC3BC,MAAkBF,EACpBb,EAAMa,MACHX,KAAKc,GAAGF,EAAWb,EAAKgB,IAAKhB,EAAKc,0CAKrB,SAAClC,EAAkBmB,GACzCF,EAAec,SAAQ,gBAAEC,OAAUC,OAC3BC,MAAkBF,GAEnBb,EAAMa,IAAahC,EAAUgC,MAC3BX,KAAKgB,IAAIJ,EAAWb,EAAKgB,IAAKhB,EAAKc,IAGtCf,EAAMa,KAAchC,EAAUgC,MAC3BX,KAAKc,GAAGF,EAAWb,EAAKgB,IAAKhB,EAAKc,0CAKrB,SAACf,GACvBF,EAAec,SAAQ,gBAAEC,OAAUC,OAC3BC,MAAkBF,EACpBb,EAAMa,MACHX,KAAKgB,IAAIJ,EAAWb,EAAKgB,IAAKhB,EAAKc,6BAKnC,SAACI,OACJ1B,EAAW,CAAC0B,EAAMC,MAAMC,EAAGF,EAAMC,MAAME,GACvCC,EAAWjC,EACfW,EAAKC,KACLD,EAAKgB,IACLxB,EACAQ,EAAKD,MAAMN,UAIRM,MAAMK,aAAac,GAAOI,SAAAA,2BAGtB,SAACJ,OACJ1B,EAAW,CAAC0B,EAAMC,MAAMC,EAAGF,EAAMC,MAAME,GACvCC,EAAWjC,EACfW,EAAKC,KACLD,EAAKgB,IACLxB,EACAQ,EAAKD,MAAMN,UAIRM,MAAMM,aAAaa,GAAOI,SAAAA,2BAGtB,SAACJ,OACJ1B,EAAW,CAAC0B,EAAMC,MAAMC,EAAGF,EAAMC,MAAME,GACvCC,EAAWjC,EACfW,EAAKC,KACLD,EAAKgB,IACLxB,EACAQ,EAAKD,MAAMN,UAIRM,MAAMO,aAAaY,GAAOI,SAAAA,2BAGtB,SAACJ,OACJ1B,EAA6B,CAAC0B,EAAMC,MAAMC,EAAGF,EAAMC,MAAME,GACzDC,EAAWjC,EACfW,EAAKC,KACLD,EAAKgB,IACLxB,EACAQ,EAAKD,MAAMN,UAIRM,MAAMQ,aAAaW,GAAOI,SAAAA,UA1K1BN,IAAMjB,EAAMwB,uCAGnBC,kBAAA,gBACOC,UAAUC,KAAK3B,UAGtB4B,mBAAA,SAAmB/C,cACXU,EAAMoC,KAAKzB,OACyByB,KAAK3B,MAAvCwB,IAAAA,GAAIrB,IAAAA,OAAoBC,KAAZC,2CAGlBmB,IAAO3C,EAAU2C,IACjBG,KAAK3B,MAAM6B,OAAShD,EAAUgD,MACV,eAAnBhD,EAAUgD,OACRF,KAAK3B,MAAM8B,SAAWjD,EAAUiD,QAC/BH,KAAK3B,MAAM,kBAAoBnB,EAAU,6BAExCoC,IAAMO,OACNtB,KAAK6B,YAAYlD,EAAU2C,cAC3BE,UAAUC,KAAK3B,OAKlBG,IAAWtB,EAAUsB,QAAUA,GAAUZ,EAAIkB,SAASN,IACxDZ,EAAIyC,UAAUL,KAAKV,IAAKd,GAItBC,EAAM6B,QAAUpD,EAAUoD,OAC5BtD,EAAKyB,EAAM6B,MAAOpD,EAAUoD,OAAOrB,SAAQ,gBAAEzB,OAAKC,OAChDG,EAAI2C,iBAAiBC,EAAKlB,IAAK9B,EAAKC,MAIpCgB,EAAMgC,SAAWvD,EAAUuD,QAC7BzD,EAAKyB,EAAMgC,OAAQvD,EAAUuD,QAAQxB,SAAQ,gBAAEzB,OAAKC,OAClDG,EAAI8C,kBAAkBF,EAAKlB,IAAK9B,EAAKC,MAKrCgB,EAAMkC,SAAWzD,EAAUyD,SACxBlC,EAAMkC,OAGT/C,EAAIgD,UAAUZ,KAAKV,IAAKb,EAAMkC,QAF9B/C,EAAIgD,UAAUZ,KAAKV,SAAKuB,SAMvBC,sBAAsB5D,EAAW8C,KAAK3B,UAG7C0C,qBAAA,WACOf,KAAKzB,MAASyB,KAAKzB,KAAKyC,kBAIxBC,sBAAsBjB,KAAK3B,OAE5B2B,KAAKzB,KAAKO,SAASkB,KAAKV,WACrBf,KAAK6B,YAAYJ,KAAKV,SA+G/B4B,OAAA,6BACSC,EAAcnF,EAAWoF,SAAU,IAAI,SAACxD,UACzCA,IACFyD,EAAK9C,KAAOX,GAGP,YA5MO0D,KAAdlD,gBAiBiB,WAjBjBA,iBAmBkB,CACpBL,OAAQ,QChFNwD,kOAOJzB,kBAAA,iBAC4BE,KAAK3B,MAAvBI,IAAAA,MAAOD,IAAAA,OAEXA,GAAUwB,KAAKzB,KAAKO,SAASN,QAC1BD,KAAKQ,SAASN,EAAOD,QAErBD,KAAKQ,SAASN,QAGhBa,IAAMb,EAAMoB,MAGnBkB,qBAAA,WACOf,KAAKzB,MAASyB,KAAKzB,KAAKyC,YAAehB,KAAKzB,KAAKO,SAASkB,KAAKV,WAI/Df,KAAK6B,YAAYJ,KAAKV,QAG7B4B,OAAA,6BACSC,EAAcnF,EAAWoF,SAAU,IAAI,SAACxD,UACzCA,IACF4C,EAAKjC,KAAOX,GAGP,YAjCa0D,KAApBC,gBAKiB,eCdvB,IAAMC,EAAiB,CAACpD,EAAOmD,GACzBE,EAAc,SAACC,UACnBF,EAAeG,SAASD,EAAMxB,OAgB1B0B,EAAc,SAACC,OACbC,EAAW,UAVE,SAAfC,EAAgBC,EAAIH,GACxBI,EAAShD,QAAQ4C,GAAU,SAACH,GACrBA,IACDD,EAAYC,IAAQM,EAAGN,GACvBA,EAAMrD,OAASqD,EAAMrD,MAAMwD,UAC7BE,EAAaC,EAAIN,EAAMrD,MAAMwD,cAMjCE,EAAa,SAACL,GACPA,EAAMrD,MAAMG,QACfsD,EAASpE,KAlBI,SAACgE,UAEXA,EAAMrD,MAAMwB,IAAM6B,EAAMrD,MAAMI,MAAMoB,GAgBzBqC,CAAWR,MAE1BG,GACIC,GCwOHK,yBAiDQ9D,kCACJA,oEASA,CACN+D,QAAQ,gCAsLU,SAAC5C,MACdA,EAAM6C,mBAILzE,EAAMU,EAAKC,OAEIX,EAAI0E,YAAjBC,IAAAA,IAKFC,EAAqB,CACzBC,WANWC,IAOXC,UAAWJ,EACXK,KAPWhF,EAAIiF,UAQfC,MAPYlF,EAAImF,WAQhBC,QAPcpF,EAAIqF,gBAWf5E,MAAM6E,iBAAiBV,OAnNxBtG,IACFA,EAASiH,YAAc9E,EAAM8E,eAG1BC,WAAaC,wCAOpBvD,kBAAA,yBACO5D,OAICoH,EAAYtD,KAAKoD,WAAWG,QAE5B3F,EAAiB,IAAI1B,EAASsH,IAAI,CACtCF,UAAAA,EACAG,MAAOzD,KAAK3B,MAAMqF,SAClBC,cAAe3D,KAAK3B,MAAM6E,iBAC1BU,OAAQ,CAAC5D,KAAK3B,MAAMsE,UAAW3C,KAAK3B,MAAMoE,UAC1CG,KAAM5C,KAAK3B,MAAMuE,KACjBE,MAAO9C,KAAK3B,MAAMyE,MAClBE,QAAShD,KAAK3B,MAAM2E,QACpBa,QAAS7D,KAAK3B,MAAMwF,QACpBC,QAAS9D,KAAK3B,MAAMyF,QACpBC,KAAM/D,KAAK3B,MAAM0F,KACjBC,YAAahE,KAAK3B,MAAM2F,YACxBC,gBAAiBjE,KAAK3B,MAAM4F,gBAC5BC,mBAAoBlE,KAAK3B,MAAM6F,mBAC/BC,aAAcnE,KAAK3B,MAAM8F,aACzBC,6BAA8BpE,KAAK3B,MAAM+F,6BACzCC,sBAAuBrE,KAAK3B,MAAMgG,sBAClCC,UAAWtE,KAAK3B,MAAMiG,UACtBC,oBAAqBvE,KAAK3B,MAAMkG,oBAChCC,UAAWxE,KAAK3B,MAAMmG,UACtBC,WAAYzE,KAAK3B,MAAMoG,WACvBC,QAAS1E,KAAK3B,MAAMqG,QACpBC,WAAY3E,KAAK3B,MAAMsG,WACvBC,QAAS5E,KAAK3B,MAAMuG,QACpBC,SAAU7E,KAAK3B,MAAMwG,SACrBC,gBAAiB9E,KAAK3B,MAAMyG,gBAC5BC,YAAa/E,KAAK3B,MAAM0G,YACxBC,kBAAmBhF,KAAK3B,MAAM2G,kBAC9BC,iBAAkBjF,KAAK3B,MAAM4G,iBAC7BC,yBAA0BlF,KAAK3B,MAAM6G,yBACrCC,iBAAkBnF,KAAK3B,MAAM8G,iBAC7BC,sBAAuBpF,KAAK3B,MAAM+G,sBAClCC,aAAcrF,KAAK3B,MAAMgH,aACzBC,sBAAuBtF,KAAK3B,MAAMiH,sBAClCC,OAAQvF,KAAK3B,MAAMkH,cAGhBhH,KAAOX,EAEZA,EAAI4H,KAAK,QAAQ,WACfhF,EAAKiF,SAAS,CAAErD,QAAQ,GAAQ5B,EAAKnC,MAAMqH,WAGzC1F,KAAK3B,MAAM6E,mBACbtF,EAAIyB,GAAG,UAAWW,KAAK2F,mBACvB/H,EAAIyB,GAAG,UAAWW,KAAK2F,mBACvB/H,EAAIyB,GAAG,YAAaW,KAAK2F,mBACzB/H,EAAIyB,GAAG,WAAYW,KAAK2F,mBACxB/H,EAAIyB,GAAG,aAAcW,KAAK2F,oBAG5BC,EAAO3G,SAAQ,SAACO,OACRN,OAAgB2G,EAAsBrG,GACtCsG,EAAOtF,EAAKnC,MAAMa,GACpB4G,IACEC,MAAMC,QAAQF,GAChBlI,EAAIyB,SAAJzB,GAAO4B,YAAUsG,KAEjBlI,EAAIyB,GAAGG,EAAOsG,OAKhB9F,KAAK3B,MAAM4H,cACbrI,EAAIsI,YAAYzC,MAAM0C,OAASnG,KAAK3B,MAAM4H,aAGxCjG,KAAK3B,MAAM+H,0BACR7H,KAAK6H,mBAAqBpG,KAAK3B,MAAM+H,wBAI9CnG,mBAAA,SAAmB/C,QACZmJ,mBAAmBnJ,EAAW8C,KAAK3B,YACnCiI,gBAAgBpJ,EAAW8C,KAAK3B,QAEhCnB,EAAU+I,cAAgBjG,KAAK3B,MAAM4H,mBACnC1H,KAAK2H,YAAYzC,MAAM0C,OAASnG,KAAK3B,MAAM4H,aAG9C/I,EAAUkJ,qBAAuBpG,KAAK3B,MAAM+H,0BACzC7H,KAAK6H,qBAAuBpG,KAAK3B,MAAM+H,uBAIhDrF,qBAAA,WACMf,KAAKzB,WACFA,KAAKgI,YAKdC,OAAA,kBACSxG,KAAKzB,QAUd+H,gBAAA,SAAgBpJ,EAAkBD,cAC1BwJ,EAAcxJ,EAASyG,SACvBgD,EAAexJ,EAAUwG,SAE3B+C,IAAgBC,QACbjB,SAAS,CAAErD,QAAQ,IAAS,WAC/Bf,EAAK9C,KAAKoI,SAASF,GACnBpF,EAAK9C,KAAKiH,KAAK,cAAc,kBAAMnE,EAAKoE,SAAS,CAAErD,QAAQ,aAYjEiE,mBAAA,SAAmBnJ,EAAkBD,OAC7BW,EAAiBoC,KAAKzB,KACtBqF,EAAShG,EAAI0E,eAGhBrF,EAASwF,WAAavF,EAAUuF,UAC/BxF,EAASwF,WAAamB,EAAOlB,KAC9BzF,EAAS0F,YAAczF,EAAUyF,WAChC1F,EAAS0F,YAAciB,EAAOrB,KAC/BtF,EAAS2F,OAAS1F,EAAU0F,MAAQ3F,EAAS2F,OAAShF,EAAIiF,WAC1D5F,EAAS6F,QAAU5F,EAAU4F,OAC5B7F,EAAS6F,QAAUlF,EAAImF,YACxB9F,EAAS+F,UAAY9F,EAAU8F,SAC9B/F,EAAS+F,UAAYpF,EAAIqF,kBAMvBT,EAAW,CACfoB,OAAQ,CAAC3G,EAAS0F,UAAW1F,EAASwF,UACtCG,KAAM3F,EAAS2F,KACfE,MAAO7F,EAAS6F,MAChBE,QAAS/F,EAAS+F,WAGoChD,KAAK3B,MAArDuI,IAAAA,qBACFC,SADwBC,yBACiBtE,UAEvCoE,OA3cS,QA6cbhJ,EAAImJ,MAAMF,aA/cI,SAkddjJ,EAAIoJ,OAAOH,aAjdG,SAoddjJ,EAAIqJ,OAAOJ,uBAGL,IAAIK,MAAM,uCAkCtBhG,OAAA,eACUkB,EAAWpC,KAAKmH,MAAhB/E,SACqBpC,KAAK3B,MAA1B+I,IAAAA,UAAW3D,IAAAA,MAEb5B,EAAW7B,KAAK3B,MAAMwD,SDnfN,SAACA,OACnBC,EAAWF,EAAYC,GAC7BC,EAASuF,eAEQ,SAAXC,EAAYC,SACS,mBAAdA,EACFA,EAGFtF,EAASrE,IAAI2J,GAAW,SAAC7F,OACzBA,SACIA,KAGLD,EAAYC,GAAQ,KAChBlD,EAAiBkD,EAAMrD,MAAMG,QAAUsD,EAASuF,eAC/CG,EAAa9F,EAAO,CAAElD,OAAAA,WAG3BkD,EAAMrD,OAASqD,EAAMrD,MAAMwD,SACtB2F,EAAa9F,EAAO,CACzBG,SAAUyF,EAAS5F,EAAMrD,MAAMwD,YAI5BH,KAIgB4F,CAASzF,GCud9B4F,CAAkBzH,KAAK3B,MAAMwD,UAC7B,YAEGV,EACLnF,EAAW0L,SACX,CAAEjK,MAAOuC,KAAKzB,MACd4C,EACE,MACA,CACEwG,IAAK3H,KAAKoD,WACVK,MAAAA,EACA2D,UAAAA,GAEFhF,GAAUP,QA5REP,KAAda,gBAKiB,WALjBA,iBAOkB,CACpBN,SAAU,KACVuF,UAAW,KACX3D,MAAO,KACPC,SAAU,kCACVP,YAAa,KACbH,QAAS,EACTF,MAAO,EACPe,QAAS,EACTC,QAAS,GACTU,UAAW,KACXT,MAAM,EACNC,YAAa,EACbC,iBAAiB,EACjBC,oBAAoB,EACpBC,aAAc,cACdC,8BAA8B,EAC9BC,uBAAuB,EACvBC,WAAW,EACXC,qBAAqB,EACrBG,SAAS,EACTD,YAAY,EACZE,YAAY,EACZC,SAAS,EACTC,UAAU,EACVC,iBAAiB,EACjBC,aAAa,EACbC,mBAAmB,EACnBC,iBAAkB,KAClB/B,iBAAkB,KAClBwC,OAAQ,KACRR,yBAA0B,KAC1BC,iBAAkB,KAClBC,uBAAuB,EACvBC,aAAc,IACdC,uBAAuB,EACvBC,OAAQ,KACRU,YAAa,KACbW,qBA7RkB,SA8RlBE,sBAAuB,OC1T3B,IAAMc,EAAgB,SAACC,EAAWC,eAAXD,IAAAA,EAAO,aAAIC,IAAAA,EAAO,IACnCD,EAAKE,SAAWD,EAAKC,cAChB,MAGJ,IAAIC,EAAQ,EAAGA,EAAQH,EAAKE,OAAQC,GAAS,KAC5CH,EAAKG,KAAWF,EAAKE,UAChB,SAIJ,cCRO3J,UACNA,EAAM6B,UACP,mBACMA,KAAM,UAAa7B,OACzB,mBACM6B,KAAM,UAAa7B,OACzB,uBACM6B,KAAM,cAAiB7B,OAC7B,oBACM6B,KAAM,WAAc7B,OAC1B,kBACM6B,KAAM,SAAY7B,OACxB,kBACM6B,KAAM,SAAY7B,iBAErB,IAAI6I,2BAA2B7I,EAAMwB,iBCqB3CoI,wLAKI,CACN7F,QAAQ,4BAmDM,WACT9D,EAAKC,KAAK2J,eAAe5J,EAAKD,MAAMwB,QAIpCtB,KAAKgB,IAAI,aAAcjB,EAAK6J,iBAC5B1C,SAAS,CAAErD,QAAQ,uCAGH,SACrBvC,EACAuI,EACAC,MAEIA,EAAUC,OAASF,EAAWE,KAAM,KAChCnI,EAAS7B,EAAKC,KAAKgK,UAAU1I,QAEpBgB,IAAXV,GACFA,EAAOqI,QAAQH,EAAUC,uCAKV,SACnBzI,EACAuI,EACAC,MAGEA,EAAUI,MAAQL,EAAWK,KAC7BJ,EAAUK,cAAgBN,EAAWM,YACrC,KACMvI,EAAS7B,EAAKC,KAAKgK,UAAU1I,QACpBgB,IAAXV,GACFA,EAAOwI,YAAYN,mCAML,SAClBxI,EACAuI,EACAC,MAGEA,EAAUI,MAAQL,EAAWK,MAC7Bb,EAAcS,EAAUO,MAAOR,EAAWQ,YAKtCzI,EAAS7B,EAAKC,KAAKgK,UAAU1I,GAG/BM,EAAO0I,kBACT1I,EAAO0I,iBAAiBC,SAG1B3I,EAAOsI,IAAMJ,EAAUI,IACvBtI,EAAO4I,OAASV,EAAUU,OAC1B5I,EAAO6I,cAAgB7I,EAAO6I,YAAaX,OAGrCY,EAAc3K,EAAKC,KAAKkF,MAAMyF,aAAarJ,GAC7CoJ,GACFA,EAAYE,aAGdhJ,EAAOiJ,mCAGO,eACNvJ,EAAOvB,EAAKD,MAAZwB,MACJvB,EAAKC,KAAKgK,UAAU1I,GAAK,KACnB5B,EAAWK,EAAKC,KAAKyC,WAArB/C,OACJA,GACFA,EAAOgB,SAAQ,SAACR,GACVA,EAAM0B,SAAWN,KACdtB,KAAK6B,YAAY3B,EAAMoB,SAK7BtB,KAAK8K,aAAaxJ,2CApI3BC,kBAAA,iBACsCwJ,EAAetJ,KAAK3B,OAAhDwB,IAAAA,GAAiBM,KAAb0B,sCACPtD,KAAKgL,UAAU1J,EAAIM,QACnB5B,KAAKc,GAAG,aAAcW,KAAKmI,kBAGlClI,mBAAA,SAAmB/C,SAKboM,EAAepM,GAHbsM,IAAJ3J,GAEGuI,KADHvG,mCAGkCyH,EAAetJ,KAAK3B,OAAhDwB,IAAAA,GAAiBM,KAAb0B,oCAERhC,IAAO2J,GAAUrJ,EAAOD,OAASkI,EAAWlI,iBACzC3B,KAAK8K,aAAaG,aAClBjL,KAAKgL,UAAU1J,EAAIM,GAIN,YAAhBA,EAAOD,MAA0C,YAApBkI,EAAWlI,KAKxB,UAAhBC,EAAOD,MAAwC,UAApBkI,EAAWlI,KAKtB,WAAhBC,EAAOD,MAAyC,WAApBkI,EAAWlI,KAKvB,WAAhBC,EAAOD,MAAyC,WAApBkI,EAAWlI,WACpCuJ,kBAAkB5J,EAAIuI,EAAYjI,QALlCsJ,kBAAkB5J,EAAIuI,EAAYjI,QALlCuJ,mBAAmB7J,EAAIuI,EAAYjI,QALnCwJ,qBAAqB9J,EAAIuI,EAAYjI,MAmB9CY,qBAAA,WACOf,KAAKzB,MAASyB,KAAKzB,KAAKyC,iBAIxB4I,mBA2FP1I,OAAA,sBACUkB,EAAWpC,KAAKmH,MAAhB/E,OACAP,EAAa7B,KAAK3B,MAAlBwD,gBAEDV,EAAcnF,EAAWoF,SAAU,IAAI,SAACxD,UACzCA,IACF4C,EAAKjC,KAAOX,GAIPwE,GAAUP,SA3JFP,KAAf2G,gBAGiB,cCejB4B,yBAkBQxL,kCACJA,wEACDyL,IAAMC,SAAS5I,cAAc,2CAGpCrB,kBAAA,iBAUME,KAAK3B,MARPsE,IAAAA,UACAF,IAAAA,SACAuH,IAAAA,OACAC,IAAAA,YACAC,IAAAA,aACAC,IAAAA,QACAC,IAAAA,OACAhD,IAAAA,eAGGiD,OAAS,IAAInO,EAAS2N,MAAM,CAC/BG,OAAAA,EACAC,YAAAA,EACAC,aAAAA,EACAE,OAAAA,EACAhD,UAAAA,SAGGiD,OAAOC,cAActK,KAAK8J,UAC1BO,OAAOE,UAAU,CAAC5H,EAAWF,IAAW+H,MAAMxK,KAAKzB,MAEpD4L,QACGE,OAAOhL,GAAG,QAAS8K,MAI5BlK,mBAAA,SAAmB/C,IAEfA,EAAUuF,WAAazC,KAAK3B,MAAMoE,UAClCvF,EAAUyF,YAAc3C,KAAK3B,MAAMsE,iBAG9B0H,OAAOE,UAAU,CAACvK,KAAK3B,MAAMsE,UAAW3C,KAAK3B,MAAMoE,cAI5D1B,qBAAA,WACOf,KAAKzB,MAASyB,KAAKzB,KAAKyC,iBAIxBqJ,OAAO9D,YAGdkE,SAAA,kBACSzK,KAAKqK,UAGdnJ,OAAA,6BACSC,EAAcnF,EAAWoF,SAAU,IAAI,SAACxD,UACzCA,IACF4C,EAAKjC,KAAOX,GAGP8M,EAAalK,EAAKnC,MAAMwD,SAAUrB,EAAKsJ,YA/EhCxI,KAAduI,gBAOiB,WAPjBA,iBASkB,CACpBI,aAAa,EACbC,cAAc,EACdC,QAAS,KACTC,OAAQ,KACRJ,OAAQ,KACR5C,UAAW,WC5BTuD,yBAcQtM,kCACJA,4FAyDK,aAENA,MAAMuM,UAAUtM,EAAKuM,QAAQC,uCAGrB,aAERzM,MAAM0M,YAAYzM,EAAKuM,QAAQC,kCAG5B,aAEHzM,MAAM2M,OAAO1M,EAAKuM,QAAQC,kBApE1BhB,IAAMC,SAAS5I,cAAc,2CAGpCrB,kBAAA,iBASME,KAAK3B,MAPPsE,IAAAA,UACAF,IAAAA,SACAuH,IAAAA,OACAiB,IAAAA,UACAL,IAAAA,UACAG,IAAAA,YACAC,IAAAA,YAGGH,QAAU,IAAI3O,EAASyO,OAAO3K,KAAK8J,IAAK,CAC3CmB,UAAAA,EACAjB,OAAAA,SAGGa,QAAQN,UAAU,CAAC5H,EAAWF,IAAW+H,MAAMxK,KAAKzB,MAErDqM,QACGC,QAAQxL,GAAG,UAAWW,KAAKkL,YAG9BH,QACGF,QAAQxL,GAAG,YAAaW,KAAKmL,cAGhCH,QACGH,QAAQxL,GAAG,OAAQW,KAAKoL,YAIjCnL,mBAAA,SAAmB/C,IAEfA,EAAUuF,WAAazC,KAAK3B,MAAMoE,UAClCvF,EAAUyF,YAAc3C,KAAK3B,MAAMsE,iBAG9BkI,QAAQN,UAAU,CAACvK,KAAK3B,MAAMsE,UAAW3C,KAAK3B,MAAMoE,cAI7D1B,qBAAA,WACOf,KAAKzB,MAASyB,KAAKzB,KAAKyC,iBAIxB6J,QAAQtE,YAGf8E,UAAA,kBACSrL,KAAK6K,WAkBd3J,OAAA,6BACSC,EAAcnF,EAAWoF,SAAU,IAAI,SAACxD,UACzCA,IACF4C,EAAKjC,KAAOX,GAGP8M,EAAalK,EAAKnC,MAAMwD,SAAUrB,EAAKsJ,YA7F/BxI,KAAfqJ,gBAOiB,YAPjBA,iBASkB,CACpBX,OAAQ,KACRiB,WAAW,QC/BTK,6MAGJxL,kBAAA,eACQlC,EAAiBoC,KAAKzB,OACeyB,KAAK3B,MAAxCwB,IAAAA,GAAIM,IAAAA,OAAQoL,IAAAA,YAAapE,IAAAA,MACjCvJ,EAAI4N,gBAAgB,CAAE3L,GAAAA,EAAIM,OAAAA,EAAQoL,YAAAA,GAAepE,MAGnDlH,mBAAA,SAAmB/C,OACXU,EAAMoC,KAAKzB,OAC0ByB,KAAK3B,MAAxCwB,IAAAA,GAAIM,IAAAA,OAAQoL,IAAAA,YAAapE,IAAAA,MAG/BtH,IAAO3C,EAAU2C,IACjBM,IAAWjD,EAAUiD,QACrBoL,IAAgBrO,EAAUqO,aAC1BpE,IAAUjK,EAAUiK,QAEpBvJ,EAAI6N,mBAAmB,CACrB5L,GAAI3C,EAAU2C,GACdM,OAAQjD,EAAUiD,OAClBoL,YAAarO,EAAUqO,cAGzB3N,EAAI4N,gBAAgB,CAAE3L,GAAAA,EAAIM,OAAAA,EAAQoL,YAAAA,GAAepE,OAIrDpG,qBAAA,cACOf,KAAKzB,MAASyB,KAAKzB,KAAKyC,kBAIOhB,KAAK3B,MAAjCwB,IAAAA,GAAIM,IAAAA,OAAQoL,IAAAA,iBACfhN,KAAKkN,mBAAmB,CAAE5L,GAAAA,EAAIM,OAAAA,EAAQoL,YAAAA,QAG7CrK,OAAA,6BACSC,EAAcnF,EAAWoF,SAAU,IAAI,SAACxD,UACzCA,IACF4C,EAAKjC,KAAOX,GAGP,YA5Cc0D,GCQrBoK,yBAUQrN,kCACJA,mEAyCK,SAACsN,EAA6BC,GACpB,iBAAVD,EASXC,EAASD,KARFpN,KAAKsN,UAAUF,GAAO,SAACG,EAAOxD,MAC7BwD,EAAO,MAAMA,EACjBF,EAAStD,WA5CRhJ,IAAMjB,EAAMwB,uCAGnBC,kBAAA,wBACqCE,KAAK3B,MAAhCsN,IAAAA,MAAOI,IAAAA,WAAYC,IAAAA,SACtBC,WAAWN,GAAO,SAAArD,UACrB9H,EAAKjC,KAAK2N,SAAS1L,EAAKlB,IAAKgJ,EAAM,CAAEyD,WAAAA,EAAYC,IAAAA,UAIrD/L,mBAAA,SAAmB/C,gBACsB8C,KAAK3B,MAApCwB,IAAAA,GAAI8L,IAAAA,MAAOI,IAAAA,WAAYC,IAAAA,OAG7BnM,IAAO3C,EAAU2C,IACjBmM,IAAQ9O,EAAU8O,KAClBD,IAAe7O,EAAU6O,uBAEpBzM,IAAMO,OACNtB,KAAK4N,YAAYjP,EAAU2C,cAC3BoM,WAAWN,GAAO,SAAArD,UACrBjH,EAAK9C,KAAK2N,SAAS7K,EAAK/B,IAAKgJ,EAAM,CAAEyD,WAAAA,EAAYC,IAAAA,OAMjDL,IAAUzO,EAAUyO,YACjBM,WAAWN,GAAO,SAAArD,UAAQjH,EAAK9C,KAAKoK,YAAYtH,EAAK/B,IAAKgJ,SAInEvH,qBAAA,WACOf,KAAKzB,MAASyB,KAAKzB,KAAKyC,YAAehB,KAAKzB,KAAK6N,SAASpM,KAAKV,WAI/Df,KAAK4N,YAAYnM,KAAKV,QAgB7B4B,OAAA,6BACSC,EAAcnF,EAAWoF,SAAU,IAAI,SAACxD,UACzCA,IACFyO,EAAK9N,KAAOX,GAGP,YAvEO0D,KAAdoK,iBAKkB,CACpBK,WAAY,EACZC,KAAK,QCXHM,uOASJxM,kBAAA,eACQlC,EAAiBoC,KAAKzB,OACqByB,KAAK3B,MAA9CkO,IAAAA,QAASC,IAAAA,kBAAmB1O,IAAAA,SAE9B2O,EAAoC,IAAIvQ,EAASoQ,mBAAmB,CACxEC,QAAAA,EACAC,kBAAAA,IAGF5O,EAAI8O,WAAWD,EAAS3O,QACnB6O,SAAWF,KAGlB1L,qBAAA,WACOf,KAAKzB,MAASyB,KAAKzB,KAAKyC,iBAIxBzC,KAAKqO,cAAc5M,KAAK2M,aAG/BE,WAAA,kBACS7M,KAAK2M,YAGdzL,OAAA,6BACSC,EAAcnF,EAAWoF,SAAU,IAAI,SAACxD,UACzCA,IACF4C,EAAKjC,KAAOX,GAEP,YAvCoB0D,KAA3BgL,iBAKkB,CACpBxO,SAAU,qBCTRgP,uOASJhN,kBAAA,eACQlC,EAAiBoC,KAAKzB,OACIyB,KAAK3B,MAA7BiF,IAAAA,UAAWxF,IAAAA,SAEb2O,EAAmC,IAAIvQ,EAAS4Q,kBAAkB,CACtExJ,UAAAA,IAGF1F,EAAI8O,WAAWD,EAAS3O,QACnB6O,SAAWF,KAGlB1L,qBAAA,WACOf,KAAKzB,MAASyB,KAAKzB,KAAKyC,iBAIxBzC,KAAKqO,cAAc5M,KAAK2M,aAG/BE,WAAA,kBACS7M,KAAK2M,YAGdzL,OAAA,6BACSC,EAAcnF,EAAWoF,SAAU,IAAI,SAACxD,UACzCA,IACF4C,EAAKjC,KAAOX,GAEP,YAtCmB0D,KAA1BwL,iBAKkB,CACpBhP,SAAU,kBC4BRiP,uOAYJjN,kBAAA,eACQlC,EAAiBoC,KAAKzB,OAWxByB,KAAK3B,MATP2O,IAAAA,gBACAC,IAAAA,iBACAC,IAAAA,kBACAC,IAAAA,iBACArP,IAAAA,SACAsP,IAAAA,uBACAC,IAAAA,yBACAC,IAAAA,QACAC,IAAAA,YAGId,EAAkC,IAAIvQ,EAAS6Q,iBAAiB,CACpEC,gBAAAA,EACAC,iBAAAA,EACAC,kBAAAA,EACAC,iBAAAA,IAGEC,GACFX,EAAQpN,GAAG,uBAAwB+N,GAGjCC,GACFZ,EAAQpN,GAAG,yBAA0BgO,GAGnCC,GACFb,EAAQpN,GAAG,QAASiO,GAGlBC,GACFd,EAAQpN,GAAG,YAAakO,GAG1B3P,EAAI8O,WAAWD,EAAS3O,QACnB6O,SAAWF,KAGlB1L,qBAAA,WACOf,KAAKzB,MAASyB,KAAKzB,KAAKyC,iBAIxBzC,KAAKqO,cAAc5M,KAAK2M,aAG/BE,WAAA,kBACS7M,KAAK2M,YAGdzL,OAAA,6BACSC,EAAcnF,EAAWoF,SAAU,IAAI,SAACxD,UACzCA,IACF4C,EAAKjC,KAAOX,GAEP,YAtEkB0D,KAAzByL,iBAKkB,CACpBC,gBAAiB,CAAEQ,oBAAoB,EAAOC,QAAS,KACvDR,iBAAkB,CAAEnJ,QAAS,IAC7BoJ,mBAAmB,EACnBC,kBAAkB,QC7ChBO,uOASJ5N,kBAAA,eACQlC,EAAiBoC,KAAKzB,OACgByB,KAAK3B,MAAzCsP,IAAAA,YAAaC,IAAAA,SAAU9P,IAAAA,SAEzB2O,EAAmC,IAAIvQ,EAASwR,kBAAkB,CACtEC,YAAAA,EACAC,SAAAA,IAGFhQ,EAAI8O,WAAWD,EAAS3O,QACnB6O,SAAWF,KAGlB1L,qBAAA,WACOf,KAAKzB,MAASyB,KAAKzB,KAAKyC,iBAIxBzC,KAAKqO,cAAc5M,KAAK2M,aAG/BE,WAAA,kBACS7M,KAAK2M,YAGdzL,OAAA,6BACSC,EAAcnF,EAAWoF,SAAU,IAAI,SAACxD,UACzCA,IACF4C,EAAKjC,KAAOX,GAEP,YAvCmB0D,KAA1BoM,iBAKkB,CACpB5P,SAAU,kBCLR+P,uOAUJ/N,kBAAA,eACQlC,EAAiBoC,KAAKzB,OACSyB,KAAK3B,MAAlCyP,IAAAA,SAAUC,IAAAA,KAAMjQ,IAAAA,SAElB2O,EAA8B,IAAIvQ,EAAS2R,aAAa,CAC5DC,SAAAA,EACAC,KAAAA,IAGFnQ,EAAI8O,WAAWD,EAAS3O,QACnB6O,SAAWF,KAGlB1L,qBAAA,WACOf,KAAKzB,MAASyB,KAAKzB,KAAKyC,iBAIxBzC,KAAKqO,cAAc5M,KAAK2M,aAG/BE,WAAA,kBACS7M,KAAK2M,YAGdzL,OAAA,6BACSC,EAAcnF,EAAWoF,SAAU,IAAI,SAACxD,UACzCA,IACF4C,EAAKjC,KAAOX,GAEP,YAxCc0D,kEAArBuM,iBAKkB,CACpB/P,SAAU,eACViQ,KAAM,gCClBV,SAASC,EAAenH,MACtBA,EAAU1K,OAAO8R,OAAO,GAAIpH,KACtB7G,gBAAgBgO,SACd,IAAI9G,MAAM,+DAGbgH,YAAclO,KAAKkO,YAAYC,KAAKnO,WACpCoO,oBAAsBpO,KAAKoO,oBAAoBD,KAAKnO,WAEpDqO,iBAAmBxH,EAAQyH,qBAC3BC,iBAAmB1H,EAAQ2H,eAAiB,eAC5CC,kBAAoB5H,EAAQ6H,kBAAoB,SAAmBC,SAClD,QAAbA,EAAqB,SAAW,SAAWA,EAAW,UAE1DC,gBAAkB/H,EAAQgI,gBAAkB,UAC5CC,mBAAqBjI,EAAQkI,mBAAqB,SAAUtL,EAAOkL,SACrD,OAAbA,EAsER,SAAmBlL,OACbuL,EAAgBvL,EAAMxF,OAAOL,KAAI,SAAUa,QACvCA,EAAMgC,QAAU,IAAI,cAAe,OAAOhC,SAEzCtC,OAAO8R,OAAO,GAAIxP,EAAO,CAC9BgC,OAAQtE,OAAO8R,OAAO,GAAIxP,EAAMgC,OAAQ,uBAF5B,gBAQTtE,OAAO8R,OAAO,GAAIxK,EAAO,CAC9BxF,OAAQ+Q,IAjFCC,CAAUxL,GASvB,SAAyBA,OACnBuL,EAAgBvL,EAAMxF,OAAOL,KAAI,SAAUa,QACvCA,EAAMgC,QAAU,IAAI,cAAe,OAAOhC,MAC5CyQ,EAAU,QACgB,gBAA1BzQ,EAAM,kBACRyQ,EAAU,KAEkB,iBAA1BzQ,EAAM,kBACJ,MAAM0Q,KAAK1Q,EAAMoB,MACnBqP,EAAU,KAER,MAAMC,KAAK1Q,EAAMoB,MACnBqP,EAAU,KAER,MAAMC,KAAK1Q,EAAMoB,MACnBqP,EAAU,KAGgB,gBAA1BzQ,EAAM,kBACJ,UAAU0Q,KAAK1Q,EAAMoB,MACvBqP,EAAU,KAER,aAAaC,KAAK1Q,EAAMoB,MAC1BqP,EAAU,IAER,SAASC,KAAK1Q,EAAMoB,MACtBqP,EAAU,MAGgB,kBAA1BzQ,EAAM,kBACRyQ,EAAU,KAEkB,uBAA1BzQ,EAAM,kBACRyQ,EAAU,KAEkB,cAA1BzQ,EAAM,iBACJ,aAAa0Q,KAAK1Q,EAAMoB,MAC1BqP,EAAU,KAGgB,eAA1BzQ,EAAM,kBACJ,UAAU0Q,KAAK1Q,EAAMoB,MACvBqP,EAAU,KAER,WAAWC,KAAK1Q,EAAMoB,MACxBqP,EAAU,MAGP/S,OAAO8R,OAAO,GAAIxP,EAAO,CAC9BgC,OAAQtE,OAAO8R,OAAO,GAAIxP,EAAMgC,OAAQ,uBACfyO,gBAKtB/S,OAAO8R,OAAO,GAAIxK,EAAO,CAC9BxF,OAAQ+Q,IA/DCI,CAAgB3L,SAGtB4L,kBAAoBxI,EAAQyI,kBAAoB,QAChDC,mBAAqB1I,EAAQ0I,oBAAsB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,MAyFxH,SAASC,EAAsBC,EAAaC,EAAUC,MAVtD,SAA2BF,EAAaC,SACX,iBAAbA,GAAyBD,EAAYN,KAAKO,GAUpDE,CAAkBH,EAAaC,GAAW,OAAOC,KAPvD,SAA6BF,EAAaC,UACjCA,EAASG,OAASH,EAASG,MAAMlP,QAAO,SAAUmP,UAChDL,EAAYN,KAAKW,EAAK,OAC5B/H,OAAS,EAKRgI,CAAoBN,EAAaC,GAAW,KAC1CM,EAAWN,EAASG,MAAMjS,KAAI,SAAUkS,UACtCL,EAAYN,KAAKW,EAAK,IACjB,CAACA,EAAK,GAAIH,GAEZG,YAEF3T,OAAO8R,OAAO,GAAIyB,EAAU,CACjCG,MAAOG,WAGJN,EA4BT1B,EAAe5R,UAAU8R,YAAc,SAAUzK,EAAOkL,MAClD3O,KAAKuP,mBAAmBU,QAAQtB,GAAY,EAAG,MAAM,IAAIzH,MAAM,YAAcyH,EAAW,yBACxFuB,EAAgBlQ,KAAK4O,iBAhB3B,SAA2BnL,UACXtH,OAAOgB,KAAKsG,EAAM0M,SAASxP,QAAO,SAAUyP,OACpDjQ,EAASsD,EAAM0M,QAAQC,SACpB,qBAAqBjB,KAAKhP,EAAOsI,QAE3B,GAW6B4H,CAAkB5M,OACzDyM,EAAe,OAAOzM,MAEvB6M,EAAQtQ,KAAKyO,kBAAkBE,GAC/Bc,EAAczP,KAAKuO,iBACnBe,EAAmBtP,KAAKqP,kBACxBL,EAAgBvL,EAAMxF,OAAOL,KAAI,SAAUa,UACzCA,EAAM0B,SAAW+P,EAlCzB,SAAiCT,EAAahR,EAAOkR,EAAmBL,UAClE7Q,EAAMgC,QAAUhC,EAAMgC,OAAO,gBAAyD,IAAxC6O,EAAiBW,QAAQxR,EAAMoB,IACxE1D,OAAO8R,OAAO,GAAIxP,EAAO,CAC9BgC,OAAQtE,OAAO8R,OAAO,GAAIxP,EAAMgC,OAAQ,cACxB+O,EAAsBC,EAAahR,EAAMgC,OAAO,cAAekP,OAI5ElR,EA0BsC8R,CAAwBd,EAAahR,EAAO6R,EAAOhB,GACvF7Q,KAGL+R,EAAgBrU,OAAO8R,OAAO,GAAIxK,EAAO,CAC3CxF,OAAQ+Q,WAGHhP,KAAK8O,mBAAmB0B,EAAe7B,IAGhDX,EAAe5R,UAAUgS,oBAAsB,eACzC3K,EAAQzD,KAAKzB,KAAKyC,WAClB2N,EAAW3O,KAAKqO,kBAOtB,SAAyBkB,OACnBZ,EAAW8B,UAAUC,UAAYD,UAAUC,UAAU,GAAMD,UAAU9B,UAAY8B,UAAUE,aAC3FC,EAAQjC,EAASkC,MAAM,KACvBC,EAAenC,EACfiC,EAAM7I,OAAS,IACjB+I,EAAeF,EAAM,OAEnBrB,EAAmBU,QAAQa,IAAiB,SACvCA,SAEF,KAjBiCC,CAAgB/Q,KAAKuP,yBAGxDhR,KAAKgB,IAAI,YAAaS,KAAKoO,0BAC3B7P,KAAKoI,SAAS3G,KAAKkO,YAAYzK,EAAOkL,KAgB7CX,EAAe5R,UAAU4U,MAAQ,SAAUpT,eACpCW,KAAOX,OACPW,KAAKc,GAAG,YAAaW,KAAKoO,0BAC1BhL,WAAa2G,SAAS5I,cAAc,OAClCnB,KAAKoD,YAGd4K,EAAe5R,UAAU6U,SAAW,gBAC7B1S,KAAKgB,IAAI,YAAaS,KAAKoO,0BAC3B7P,UAAOsC,GAsCZlE,UAAiBqR,KCzNbkD,0NA6CW,eACLvC,EAAarQ,EAAKD,MAAlBsQ,SACF/Q,EAAMU,EAAKC,KACXkO,EAAUnO,EAAKqO,SAEjBgC,GACF/Q,EAAI+I,SAAS8F,EAAQyB,YAAYtQ,EAAIoD,WAAY2N,2CA5CrD7O,kBAAA,eACQlC,EAAiBoC,KAAKzB,OAQxByB,KAAK3B,MANPkR,IAAAA,mBACAR,IAAAA,kBACAP,IAAAA,cACAE,IAAAA,iBACAG,IAAAA,eACAP,IAAAA,gBAGI7B,EAAiC,IAAIuB,EAAe,CACxDuB,mBAAAA,EACAR,kBAAAA,EACAP,cAAAA,EACAE,iBAAAA,EACAG,eAAAA,EACAP,gBAAAA,IAGF1Q,EAAI8O,WAAWD,QACVE,SAAWF,KAGlBxM,mBAAA,SAAmB/C,GACbA,EAAUyR,WAAa3O,KAAK3B,MAAMsQ,eAC/BwC,kBAITpQ,qBAAA,WACOf,KAAKzB,MAASyB,KAAKzB,KAAKyC,iBAIxBzC,KAAKqO,cAAc5M,KAAK2M,aAa/BE,WAAA,kBACS7M,KAAK2M,YAGdzL,OAAA,6BACSC,EAAcnF,EAAWoF,SAAU,IAAI,SAACxD,UACzCA,IACF4C,EAAKjC,KAAOX,GAEP,YAhEiB0D,KAAxB4P,iBAKkB,yBC3CxB,IAAIE,EAAgB,CAClB,IACQ,8BACE,gBACI,gBACM,2CAER,mDACM,kBACL,UACD,CACR,MACA,CACE,KACA,QACA,cAEF,CACE,MACA,CACE,MACA,cAEF,CACE,KACA,QACA,OACA,gBACA,UACA,mBAII,YACM,sBACD,mBACD,eAEL,cACO,MACJ,UACC,CACP,CACE,GACA,KAEF,CACE,GACA,qBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,sCAIS,MACL,UACC,CACP,CACE,GACA,GAEF,CACE,GACA,qBAIU,MACN,QACC,CACP,CACE,GACA,GAEF,CACE,GACA,OAMV,IACQ,qCACE,gBACI,gBACM,2CAER,mDACM,kBACL,SACD,CACR,MACA,CACE,KACA,QACA,cAEF,CACE,MACA,CACE,MACA,cAEF,CACE,KACA,QACA,YACA,qBAII,YACM,sBACD,mBACD,eAEL,cACO,MACJ,UACC,CACP,CACE,EACA,KAEF,CACE,GACA,IAEF,CACE,GACA,qBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,sCAIS,MACL,UACC,CACP,CACE,GACA,IAEF,CACE,GACA,GAEF,CACE,GACA,IAEF,CACE,GACA,uBAIU,MACN,QACC,CACP,CACE,GACA,GAEF,CACE,GACA,OAMV,IACQ,0BACE,gBACI,gBACM,2CAER,mDACM,kBACL,SACD,CACR,MACA,CACE,KACA,QACA,cAEF,CACE,MACA,CACE,KACA,QACA,WAEF,CACE,MACA,uBAII,YACM,sBACD,mBACD,eAEL,cACO,MACJ,UACC,CACP,CACE,GACA,KAEF,CACE,GACA,GAEF,CACE,GACA,mBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,sCAIS,MACL,UACC,CACP,CACE,GACA,GAEF,CACE,GACA,KAEF,CACE,GACA,IAEF,CACE,GACA,qBAIU,MACN,QACC,CACP,CACE,GACA,GAEF,CACE,GACA,OAMV,IACQ,wBACE,gBACI,gBACM,2CAER,mDACM,kBACL,SACD,CACR,MACA,CACE,KACA,QACA,cAEF,CACE,MACA,CACE,KACA,QACA,SAEF,CACE,MACA,uBAII,YACM,sBACD,mBACD,eAEL,cACO,MACJ,UACC,CACP,CACE,EACA,IAEF,CACE,EACA,MAEF,CACE,GACA,IAEF,CACE,GACA,qBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,sCAIS,MACL,UACC,CACP,CACE,EACA,GAEF,CACE,EACA,GAEF,CACE,GACA,IAEF,CACE,GACA,qBAIU,IAGpB,IACQ,2BACE,gBACI,gBACM,2CAER,mDACM,kBACL,SACD,CACR,MACA,CACE,KACA,QACA,cAEF,CACE,MACA,CACE,KACA,QACA,YAEF,CACE,MACA,uBAII,YACM,sBACD,mBACD,eAEL,cACO,MACJ,UACC,CACP,CACE,EACA,IAEF,CACE,EACA,GAEF,CACE,GACA,IAEF,CACE,GACA,mBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,uCAIU,gBACD,MACL,UACC,CACP,CACE,EACA,GAEF,CACE,EACA,KAEF,CACE,GACA,KAEF,CACE,GACA,IAEF,CACE,GACA,UAMV,IACQ,2BACM,gBACM,wCAEX,2BACE,cACO,MACJ,UACC,CACP,CACE,GACA,GAEF,CACE,GACA,GAEF,CACE,GACA,mBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,sCAIS,MACL,UACC,CACP,CACE,GACA,GAEF,CACE,GACA,KAEF,CACE,GACA,IAEF,CACE,GACA,qBAIU,IAGpB,IACQ,sCACM,gBACM,wCAEX,sCACE,cACO,MACJ,UACC,CACP,CACE,EACA,IAEF,CACE,GACA,GAEF,CACE,GACA,mBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,sCAIS,MACL,UACC,CACP,CACE,GACA,IAEF,CACE,GACA,GAEF,CACE,GACA,IAEF,CACE,GACA,uBAIU,IAGpB,IACQ,+BACM,gBACM,wCAEX,+BACE,cACO,MACJ,UACC,CACP,CACE,GACA,KAEF,CACE,GACA,qBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,sCAIS,MACL,UACC,CACP,CACE,GACA,GAEF,CACE,GACA,qBAIU,IAGpB,IACQ,yBACM,gBACM,wCAEX,yBACE,cACO,MACJ,UACC,CACP,CACE,EACA,KAEF,CACE,GACA,IAEF,CACE,GACA,mBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,sCAIS,MACL,UACC,CACP,CACE,EACA,GAEF,CACE,EACA,GAEF,CACE,GACA,IAEF,CACE,GACA,qBAIU,IAGpB,IACQ,4BACM,gBACM,wCAEX,4BACE,cACO,MACJ,UACC,CACP,CACE,EACA,IAEF,CACE,EACA,KAEF,CACE,GACA,IAEF,CACE,GACA,mBAIQ,MACJ,OACA,uBACI,mBACH,CACP,CACE,MACA,sBAEF,CACE,WACA,sBAEF,CACE,QACA,uBAEF,CACE,SACA,uCAIU,gBACD,MACL,UACC,CACP,CACE,EACA,GAEF,CACE,EACA,KAEF,CACE,GACA,KAEF,CACE,GACA,IAEF,CACE,GACA,WA8BZ,SAASC,EAAcxK,QACf7G,gBAAgBqR,SACd,IAAInK,MAAM,8DAGbL,QAAU1K,OAAO8R,OAAO,CAC3BqD,aAAa,EACbC,mBAAmB,EACnBC,cAAe,sBACd3K,QAEE3F,OAASlB,KAAKkB,OAAOiN,KAAKnO,WAC1ByR,cAAgBzR,KAAKyR,cAActD,KAAKnO,WACxC0R,aAAe1R,KAAK0R,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"}